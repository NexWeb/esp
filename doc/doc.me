/*
    doc.me -- MakeMe file for ESP documentation 
 */

Me.load({

    targets: {
        api: {
            action: `
                rm(['api/edi.tags', 'api/esp.tags'])
                apidoc('api/edi.dox', ['${SRC}/src/edi.h', '${SRC}/src/mdb.h' ], 'EDI', ls('api/*.tags'))
                apidoc('api/esp.dox', ['${SRC}/src/esp.h'], 'ESP', ls('api/*.tags'))
                for each (let src: Path in ['api/http.html', 'api/mpr.html', 'api/osdep.html', 'api/esp.html', 
                        'api/edi.html']) {
                    apiLayout(src, Path('documents/ref').join(src))
                }
            `,
        },
        validate: {
            depends: [ 'gen-doc' ],
            action: `
                for each (f in Path('public').files('**/*.html')) {
                    let data = f.readString()
                    data = data.replace('700|Open', '').
                        replace(/esp.download.html/g, 'download/esp.html').
                        replace(/appweb.download.html/g, 'download/appweb.html').
                        replace(/developers.contributors.html/g, 'scripts/contributors.esp').
                        replace(/pak.download.html/g, 'download/pak.html').
                        replace(/nowrap="nowrap"/g, '').
                        replace(/nowrap/g, '').
                        replace(/https:..embedthis.com.appweb.licensing.html/g, 'https://embedthis.com/').
                        replace(/https:..embedthis.com.appweb.doc.users.configuration.html/g, 'https://embedthis.com/').
                        replace(/https:..embedthis.com.appweb.doc.users.dir.esp.html/g, 'https://embedthis.com/').
                        replace(/https:..embedthis.com.appweb.doc.users.dir.route.html/g, 'https://embedthis.com/').
                        replace(/https:..embedthis.com.esp.licensing.html/g, 'https://embedthis.com/').
                        replace(/https:..embedthis.com.makeme.doc.guide.me.source.building.htm/g, 'https://embedthis.com/').
                        replace(/https:..embedthis.com.makeme.doc.source.building.htm/g, 'https://embedthis.com/').
                        replace(/https:..embedthis.com.makeme.doc.source/g, 'https://embedthis.com/').
                        replace(/https:..embedthis.com.developers./g, 'https://embedthis.com/')
                    trace('Patch', f)
                    f.write(data)
                }
                for each (f in Path('public/man').files('*.html')) {
                    f.write(f.readString().toLowerCase())
                }
                trace('Listen', 'exp --nowatch')
                run('exp --nowatch')
            `
        },
    },
})
