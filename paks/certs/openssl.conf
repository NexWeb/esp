[ ca ]
default_ca				= defaultCA

[ defaultCA ]
dir						= .						# Where everything is kept
new_certs_dir			= .						# Default place for new certs.
certificate				= ca.crt				# The CA certificate
database				= ca.db					# Database index file.
private_key				= ca.key    			# The private key
serial					= ca.srl 			    # The current serial number
default_crl_days		= 7						# How long before next CRL
default_days			= 3650					# How long to certify for
default_md				= default	            # Which md to use.
policy					= policyMatch
x509_extensions			= client
copy_extensions         = copy
name_opt                = ca_default
cert_opt                = ca_default


[ policyMatch ]
countryName				= supplied
stateOrProvinceName		= supplied
organizationName		= supplied
organizationalUnitName	= supplied
commonName				= supplied
emailAddress			= supplied


# Keygen, requests and self-signed certs
[ req ]
default_bits			= 2048
default_keyfile 		= ca.key
default_md				= default               # sha1
prompt					= no
distinguished_name		= distinguishedName
x509_extensions			= caExtensions          # Extensions to add to self-signed cert
req_extensions          = reqExtensions         # Extensions for certificate request
attributes              = reqAttributes


[ reqAttributes ]


[ distinguishedName ]
countryName				= US
stateOrProvinceName		= Washington
localityName			= Seattle
0.organizationName		= Example.com
organizationalUnitName	= Licensing
commonName				= example.com
emailAddress			= licensing@example.com


[ caExtensions ]
keyUsage                = critical, cRLSign, keyCertSign
# any, digitalSignature, keyEncipherment
extendedKeyUsage       = serverAuth
basicConstraints 		= critical, CA:true
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always, issuer:always


[ client ]
basicConstraints		= CA:FALSE
nsComment               = "OpenSSL Generated Certificate"
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid, issuer:always
keyUsage                = digitalSignature, keyEncipherment
extendedKeyUsage        = clientAuth


[ server ]
basicConstraints       = CA:FALSE
nsCertType             = server
nsComment              = "OpenSSL Generated Server Certificate"
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid, issuer:always
extendedKeyUsage       = serverAuth
# nsSGC, msSGC
keyUsage               = digitalSignature, keyEncipherment


[ reqExtensions ]
basicConstraints 		= CA:FALSE
keyUsage                = nonRepudiation, digitalSignature, keyEncipherment

# UNUSED?
[ v3_req ]
basicConstraints       = CA:FALSE
keyUsage               = nonRepudiation, digitalSignature, keyEncipherment
