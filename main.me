/*
    main.me -- MakeMe file for ESP
 */

Me.load({
    plugins: [ 'configuration', 'package' ],

    blend: [
        'appweb',
        'sqlite',
        
        'samples/samples.me',
        'src/esp.me',
        'test/test.me',
        'doc/doc.me',
    ],

    configure: {
        requires:  [ 'compiler', 'appweb', 'osdep', 'http', 'mpr', 'pcre'],
        discovers: [ 'mdb', 'sqlite', 'ssl', ],
        extras:    [ 'cgi', 'dir' ],
    },

    customize: [
        /* 
            The optional custom.me file is loaded after main.me is fully processed. It can
            thus override any setting. Feel free to create and customize. 
         */
        'custom.me',
    ],

    settings: {
        me: '=>0.8.4',

        integrate: true,

        /*
            Installation prefix set
         */
        prefixes: 'package-prefixes',
        manifest: 'package/manifest.me',

        platforms: [ 'local' ],
        static: false,
        tune: 'size',

        
        /*
            EST SSL stack configuration
         */
        est: {
            camellia: false,
            padlock: false,
            sslClient: false,
            des: false,
            testCerts: false,
            xtea: false,
            romTables: false,
            genPrime: false,
        },

        http: {
            /* Use PAM (Plugable Authentication Module) to store passwords */
            pam: true,
            webSockets: true,
        },

        mpr: {
            /*
                Enable logging via mprLog to the log file
                The default is to enable logging for both debug and release builds.
             */
            logging: true,
            manager: 'espman',
        },

        tune: 'speed',
    },

    scripts: {
        loaded: `
            me.targets.httpcmd.enable = false
            //MOB me.targets.makerom.enable = false
        `,
    },

    targets: {
        init: {
            first: true,
            path: 'init',
            'generate-make': `
                if [ ! -d /usr/include/openssl ] ; then echo
                    echo Install libssl-dev to get /usr/include/openssl
                    exit 255
                fi
            `,
            action: ' ',
            enable: "me.platform.os == 'linux'",
        },
        mdb: {
            configurable: true,
            description: 'Embedthis MDB Database',
        },

        projects: {
            action: `genProjects('-with openssl', 'default')`,
        },

        mine: {
            action: `genProjects('-with openssl', 'mine', Config.OS + '-' + Config.CPU)`,
        }
    },

    usage: {
        // 'mpr.logging':  'Enable application logging (true|false)',
    },
})
