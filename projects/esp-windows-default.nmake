#
#   esp-windows-default.nmake -- Makefile to build Embedthis ESP for windows
#

PRODUCT            = esp
VERSION            = 0.9.0
PROFILE            = default
PA                 = $(PROCESSOR_ARCHITECTURE)

!IF "$(PA)" == "AMD64"
ARCH               = x64
ENTRY              = _DllMainCRTStartup
!ELSE
ARCH               = x86
ENTRY              = _DllMainCRTStartup@12
!ENDIF

OS                 = windows
CONFIG             = $(OS)-$(ARCH)-$(PROFILE)
LBIN               = $(CONFIG)\bin

BIT_COMP_APPWEB    = 1
BIT_COMP_CGI       = 0
BIT_COMP_DIR       = 0
BIT_COMP_EJS       = 1
BIT_COMP_EST       = 1
BIT_COMP_LIBEST    = 0
BIT_COMP_MATRIXSSL = 0
BIT_COMP_NANOSSL   = 0
BIT_COMP_OPENSSL   = 0
BIT_COMP_PCRE      = 1
BIT_COMP_PHP       = 0
BIT_COMP_SQLITE    = 1
BIT_COMP_SSL       = 1
BIT_COMP_ZLIB      = 1

!IF "$(BIT_COMP_EST)" == "1"
BIT_COMP_SSL = 1
!ENDIF

!IF "$(BIT_COMP_LIB)" == "1"
BIT_COMP_COMPILER = 1
!ENDIF

!IF "$(BIT_COMP_MATRIXSSL)" == "1"
BIT_COMP_SSL = 1
!ENDIF

!IF "$(BIT_COMP_NANOSSL)" == "1"
BIT_COMP_SSL = 1
!ENDIF

!IF "$(BIT_COMP_OPENSSL)" == "1"
BIT_COMP_SSL = 1
!ENDIF

!IF "$(BIT_COMP_RC)" == "1"
BIT_COMP_WINSDK = 1
!ENDIF

!IF "$(BIT_COMP_SDB)" == "1"
BIT_COMP_SQLITE = 1
!ENDIF


BIT_COMP_APPWEB_PATH      = appweb
BIT_COMP_BITOS_PATH       = bitos
BIT_COMP_CGI_PATH         = cgi
BIT_COMP_COMPILER_PATH    = cl
BIT_COMP_DIR_PATH         = dir
BIT_COMP_DOXYGEN_PATH     = doxygen
BIT_COMP_DSI_PATH         = dsi
BIT_COMP_EJS_PATH         = ejs
BIT_COMP_ESP_PATH         = esp
BIT_COMP_EST_PATH         = est
BIT_COMP_GZIP_PATH        = gzip
BIT_COMP_HTMLMIN_PATH     = htmlmin
BIT_COMP_HTTP_PATH        = http
BIT_COMP_LIB_PATH         = lib.exe
BIT_COMP_LINK_PATH        = link
BIT_COMP_MAN_PATH         = man
BIT_COMP_MAN2HTML_PATH    = man2html
BIT_COMP_MATRIXSSL_PATH   = /usr/src/matrixssl
BIT_COMP_MDB_PATH         = mdb
BIT_COMP_MPR_PATH         = mpr
BIT_COMP_NANOSSL_PATH     = /usr/src/nanossl
BIT_COMP_OPENSSL_PATH     = /usr/src/openssl
BIT_COMP_PAK_PATH         = pak
BIT_COMP_PCRE_PATH        = pcre
BIT_COMP_PHP_PATH         = php
BIT_COMP_PMAKER_PATH      = pmaker
BIT_COMP_RC_PATH          = rc
BIT_COMP_RECESS_PATH      = recess
BIT_COMP_SDB_PATH         = sdb
BIT_COMP_SQLITE_PATH      = sqlite
BIT_COMP_SSL_PATH         = ssl
BIT_COMP_UGLIFYJS_PATH    = uglifyjs
BIT_COMP_UTEST_PATH       = utest
BIT_COMP_WINSDK_PATH      = winsdk
BIT_COMP_ZIP_PATH         = zip

CC                 = cl
LD                 = link
RC                 = rc
CFLAGS             = -nologo -GR- -W3 -O2 -MD
DFLAGS             = -D_REENTRANT -D_MT -DBIT_COMP_APPWEB=$(BIT_COMP_APPWEB) -DBIT_COMP_CGI=$(BIT_COMP_CGI) -DBIT_COMP_DIR=$(BIT_COMP_DIR) -DBIT_COMP_EJS=$(BIT_COMP_EJS) -DBIT_COMP_EST=$(BIT_COMP_EST) -DBIT_COMP_LIBEST=$(BIT_COMP_LIBEST) -DBIT_COMP_MATRIXSSL=$(BIT_COMP_MATRIXSSL) -DBIT_COMP_NANOSSL=$(BIT_COMP_NANOSSL) -DBIT_COMP_OPENSSL=$(BIT_COMP_OPENSSL) -DBIT_COMP_PCRE=$(BIT_COMP_PCRE) -DBIT_COMP_PHP=$(BIT_COMP_PHP) -DBIT_COMP_SQLITE=$(BIT_COMP_SQLITE) -DBIT_COMP_SSL=$(BIT_COMP_SSL) -DBIT_COMP_ZLIB=$(BIT_COMP_ZLIB) 
IFLAGS             = -I$(CONFIG)\inc
LDFLAGS            = -nologo -nodefaultlib -incremental:no -machine:$(ARCH)
LIBPATHS           = "-libpath:$(CONFIG)\bin"
LIBS               = ws2_32.lib advapi32.lib user32.lib kernel32.lib oldnames.lib msvcrt.lib shell32.lib

BIT_ROOT_PREFIX    = C:
BIT_BASE_PREFIX    = $(BIT_ROOT_PREFIX)\Program Files
BIT_APP_PREFIX     = $(BIT_BASE_PREFIX)\Embedthis ESP
BIT_VAPP_PREFIX    = $(BIT_APP_PREFIX)
BIT_DATA_PREFIX    = $(BIT_VAPP_PREFIX)
BIT_STATE_PREFIX   = $(BIT_VAPP_PREFIX)
BIT_BIN_PREFIX     = $(BIT_VAPP_PREFIX)\bin
BIT_INC_PREFIX     = $(BIT_VAPP_PREFIX)\inc
BIT_LIB_PREFIX     = $(BIT_VAPP_PREFIX)\lib
BIT_MAN_PREFIX     = $(BIT_VAPP_PREFIX)\man
BIT_ETC_PREFIX     = $(BIT_VAPP_PREFIX)
BIT_WEB_PREFIX     = $(BIT_VAPP_PREFIX)\web
BIT_LOG_PREFIX     = $(BIT_VAPP_PREFIX)\log
BIT_SPOOL_PREFIX   = $(BIT_VAPP_PREFIX)\tmp
BIT_CACHE_PREFIX   = $(BIT_VAPP_PREFIX)\cache
BIT_SRC_PREFIX     = $(BIT_VAPP_PREFIX)\src


!IF "$(BIT_COMP_APPWEB)" == "1"
TARGETS            = $(TARGETS) $(CONFIG)\bin\libappweb.dll
!ENDIF
!IF "$(BIT_COMP_APPWEB)" == "1"
TARGETS            = $(TARGETS) $(CONFIG)\bin\appweb.exe
!ENDIF
!IF "$(BIT_COMP_EJS)" == "1"
TARGETS            = $(TARGETS) $(CONFIG)\bin\libejs.dll
!ENDIF
!IF "$(BIT_COMP_EJS)" == "1"
TARGETS            = $(TARGETS) $(CONFIG)\bin\ejsc.exe
!ENDIF
!IF "$(BIT_COMP_EJS)" == "1"
TARGETS            = $(TARGETS) $(CONFIG)\bin\ejs.mod
!ENDIF
!IF "$(BIT_COMP_EST)" == "1"
TARGETS            = $(TARGETS) $(CONFIG)\bin\libest.dll
!ENDIF
TARGETS            = $(TARGETS) $(CONFIG)\bin\ca.crt
TARGETS            = $(TARGETS) $(CONFIG)\bin\http.exe
TARGETS            = $(TARGETS) $(CONFIG)\bin\libmprssl.dll
!IF "$(BIT_COMP_SQLITE)" == "1"
TARGETS            = $(TARGETS) $(CONFIG)\bin\libsql.dll
!ENDIF
!IF "$(BIT_COMP_SQLITE)" == "1"
TARGETS            = $(TARGETS) $(CONFIG)\bin\sqlite.exe
!ENDIF
TARGETS            = $(TARGETS) $(CONFIG)\bin\libmod_esp.dll
TARGETS            = $(TARGETS) $(CONFIG)\bin\esp.exe
TARGETS            = $(TARGETS) $(CONFIG)\bin\esp.conf
TARGETS            = $(TARGETS) $(CONFIG)\paks
TARGETS            = $(TARGETS) $(CONFIG)\bin\removeFiles.exe
TARGETS            = $(TARGETS) bower.json

!IFNDEF SHOW
.SILENT:
!ENDIF

all build compile: prep $(TARGETS)

.PHONY: prep

prep:
!IF "$(VSINSTALLDIR)" == ""
	echo "Visual Studio vars not set. Run vcvars.bat."
	exit 255
!ENDIF
!IF "$(BIT_APP_PREFIX)" == ""
	echo "BIT_APP_PREFIX not set."
	exit 255
!ENDIF
	@if not exist $(CONFIG)\bin md $(CONFIG)\bin
	@if not exist $(CONFIG)\inc md $(CONFIG)\inc
	@if not exist $(CONFIG)\obj md $(CONFIG)\obj
	@if not exist $(CONFIG)\inc\bit.h copy projects\esp-windows-default-bit.h $(CONFIG)\inc\bit.h

clean:
	if exist "$(CONFIG)\bin\libappweb.dll" del /Q "$(CONFIG)\bin\libappweb.dll"
	if exist "$(CONFIG)\bin\libappweb.lib" del /Q "$(CONFIG)\bin\libappweb.lib"
	if exist "$(CONFIG)\bin\libappweb.pdb" del /Q "$(CONFIG)\bin\libappweb.pdb"
	if exist "$(CONFIG)\bin\libappweb.exp" del /Q "$(CONFIG)\bin\libappweb.exp"
	if exist "$(CONFIG)\bin\appweb.exe" del /Q "$(CONFIG)\bin\appweb.exe"
	if exist "$(CONFIG)\bin\appweb.lib" del /Q "$(CONFIG)\bin\appweb.lib"
	if exist "$(CONFIG)\bin\appweb.pdb" del /Q "$(CONFIG)\bin\appweb.pdb"
	if exist "$(CONFIG)\bin\appweb.exp" del /Q "$(CONFIG)\bin\appweb.exp"
	if exist "$(CONFIG)\bin\libejs.dll" del /Q "$(CONFIG)\bin\libejs.dll"
	if exist "$(CONFIG)\bin\libejs.lib" del /Q "$(CONFIG)\bin\libejs.lib"
	if exist "$(CONFIG)\bin\libejs.pdb" del /Q "$(CONFIG)\bin\libejs.pdb"
	if exist "$(CONFIG)\bin\libejs.exp" del /Q "$(CONFIG)\bin\libejs.exp"
	if exist "$(CONFIG)\bin\ejsc.exe" del /Q "$(CONFIG)\bin\ejsc.exe"
	if exist "$(CONFIG)\bin\ejsc.lib" del /Q "$(CONFIG)\bin\ejsc.lib"
	if exist "$(CONFIG)\bin\ejsc.pdb" del /Q "$(CONFIG)\bin\ejsc.pdb"
	if exist "$(CONFIG)\bin\ejsc.exp" del /Q "$(CONFIG)\bin\ejsc.exp"
	if exist "$(CONFIG)\bin\libest.dll" del /Q "$(CONFIG)\bin\libest.dll"
	if exist "$(CONFIG)\bin\libest.lib" del /Q "$(CONFIG)\bin\libest.lib"
	if exist "$(CONFIG)\bin\libest.pdb" del /Q "$(CONFIG)\bin\libest.pdb"
	if exist "$(CONFIG)\bin\libest.exp" del /Q "$(CONFIG)\bin\libest.exp"
	if exist "$(CONFIG)\bin\ca.crt" del /Q "$(CONFIG)\bin\ca.crt"
	if exist "$(CONFIG)\bin\libhttp.dll" del /Q "$(CONFIG)\bin\libhttp.dll"
	if exist "$(CONFIG)\bin\libhttp.lib" del /Q "$(CONFIG)\bin\libhttp.lib"
	if exist "$(CONFIG)\bin\libhttp.pdb" del /Q "$(CONFIG)\bin\libhttp.pdb"
	if exist "$(CONFIG)\bin\libhttp.exp" del /Q "$(CONFIG)\bin\libhttp.exp"
	if exist "$(CONFIG)\bin\http.exe" del /Q "$(CONFIG)\bin\http.exe"
	if exist "$(CONFIG)\bin\http.lib" del /Q "$(CONFIG)\bin\http.lib"
	if exist "$(CONFIG)\bin\http.pdb" del /Q "$(CONFIG)\bin\http.pdb"
	if exist "$(CONFIG)\bin\http.exp" del /Q "$(CONFIG)\bin\http.exp"
	if exist "$(CONFIG)\bin\libmpr.dll" del /Q "$(CONFIG)\bin\libmpr.dll"
	if exist "$(CONFIG)\bin\libmpr.lib" del /Q "$(CONFIG)\bin\libmpr.lib"
	if exist "$(CONFIG)\bin\libmpr.pdb" del /Q "$(CONFIG)\bin\libmpr.pdb"
	if exist "$(CONFIG)\bin\libmpr.exp" del /Q "$(CONFIG)\bin\libmpr.exp"
	if exist "$(CONFIG)\bin\libmprssl.dll" del /Q "$(CONFIG)\bin\libmprssl.dll"
	if exist "$(CONFIG)\bin\libmprssl.lib" del /Q "$(CONFIG)\bin\libmprssl.lib"
	if exist "$(CONFIG)\bin\libmprssl.pdb" del /Q "$(CONFIG)\bin\libmprssl.pdb"
	if exist "$(CONFIG)\bin\libmprssl.exp" del /Q "$(CONFIG)\bin\libmprssl.exp"
	if exist "$(CONFIG)\bin\makerom.exe" del /Q "$(CONFIG)\bin\makerom.exe"
	if exist "$(CONFIG)\bin\makerom.lib" del /Q "$(CONFIG)\bin\makerom.lib"
	if exist "$(CONFIG)\bin\makerom.pdb" del /Q "$(CONFIG)\bin\makerom.pdb"
	if exist "$(CONFIG)\bin\makerom.exp" del /Q "$(CONFIG)\bin\makerom.exp"
	if exist "$(CONFIG)\bin\libpcre.dll" del /Q "$(CONFIG)\bin\libpcre.dll"
	if exist "$(CONFIG)\bin\libpcre.lib" del /Q "$(CONFIG)\bin\libpcre.lib"
	if exist "$(CONFIG)\bin\libpcre.pdb" del /Q "$(CONFIG)\bin\libpcre.pdb"
	if exist "$(CONFIG)\bin\libpcre.exp" del /Q "$(CONFIG)\bin\libpcre.exp"
	if exist "$(CONFIG)\bin\libsql.dll" del /Q "$(CONFIG)\bin\libsql.dll"
	if exist "$(CONFIG)\bin\libsql.lib" del /Q "$(CONFIG)\bin\libsql.lib"
	if exist "$(CONFIG)\bin\libsql.pdb" del /Q "$(CONFIG)\bin\libsql.pdb"
	if exist "$(CONFIG)\bin\libsql.exp" del /Q "$(CONFIG)\bin\libsql.exp"
	if exist "$(CONFIG)\bin\sqlite.exe" del /Q "$(CONFIG)\bin\sqlite.exe"
	if exist "$(CONFIG)\bin\sqlite.lib" del /Q "$(CONFIG)\bin\sqlite.lib"
	if exist "$(CONFIG)\bin\sqlite.pdb" del /Q "$(CONFIG)\bin\sqlite.pdb"
	if exist "$(CONFIG)\bin\sqlite.exp" del /Q "$(CONFIG)\bin\sqlite.exp"
	if exist "$(CONFIG)\bin\libzlib.dll" del /Q "$(CONFIG)\bin\libzlib.dll"
	if exist "$(CONFIG)\bin\libzlib.lib" del /Q "$(CONFIG)\bin\libzlib.lib"
	if exist "$(CONFIG)\bin\libzlib.pdb" del /Q "$(CONFIG)\bin\libzlib.pdb"
	if exist "$(CONFIG)\bin\libzlib.exp" del /Q "$(CONFIG)\bin\libzlib.exp"
	if exist "$(CONFIG)\bin\libmod_esp.dll" del /Q "$(CONFIG)\bin\libmod_esp.dll"
	if exist "$(CONFIG)\bin\libmod_esp.lib" del /Q "$(CONFIG)\bin\libmod_esp.lib"
	if exist "$(CONFIG)\bin\libmod_esp.pdb" del /Q "$(CONFIG)\bin\libmod_esp.pdb"
	if exist "$(CONFIG)\bin\libmod_esp.exp" del /Q "$(CONFIG)\bin\libmod_esp.exp"
	if exist "$(CONFIG)\bin\esp.exe" del /Q "$(CONFIG)\bin\esp.exe"
	if exist "$(CONFIG)\bin\esp.lib" del /Q "$(CONFIG)\bin\esp.lib"
	if exist "$(CONFIG)\bin\esp.pdb" del /Q "$(CONFIG)\bin\esp.pdb"
	if exist "$(CONFIG)\bin\esp.exp" del /Q "$(CONFIG)\bin\esp.exp"
	if exist "$(CONFIG)\bin\esp.conf" del /Q "$(CONFIG)\bin\esp.conf"
	if exist "$(CONFIG)\bin\removeFiles.exe" del /Q "$(CONFIG)\bin\removeFiles.exe"
	if exist "$(CONFIG)\bin\removeFiles.lib" del /Q "$(CONFIG)\bin\removeFiles.lib"
	if exist "$(CONFIG)\bin\removeFiles.pdb" del /Q "$(CONFIG)\bin\removeFiles.pdb"
	if exist "$(CONFIG)\bin\removeFiles.exp" del /Q "$(CONFIG)\bin\removeFiles.exp"
	if exist "bower.json" del /Q "bower.json"
	if exist "$(CONFIG)\obj\appwebLib.obj" del /Q "$(CONFIG)\obj\appwebLib.obj"
	if exist "$(CONFIG)\obj\appweb.obj" del /Q "$(CONFIG)\obj\appweb.obj"
	if exist "$(CONFIG)\obj\ejsLib.obj" del /Q "$(CONFIG)\obj\ejsLib.obj"
	if exist "$(CONFIG)\obj\ejsc.obj" del /Q "$(CONFIG)\obj\ejsc.obj"
	if exist "$(CONFIG)\obj\estLib.obj" del /Q "$(CONFIG)\obj\estLib.obj"
	if exist "$(CONFIG)\obj\httpLib.obj" del /Q "$(CONFIG)\obj\httpLib.obj"
	if exist "$(CONFIG)\obj\http.obj" del /Q "$(CONFIG)\obj\http.obj"
	if exist "$(CONFIG)\obj\mprLib.obj" del /Q "$(CONFIG)\obj\mprLib.obj"
	if exist "$(CONFIG)\obj\mprSsl.obj" del /Q "$(CONFIG)\obj\mprSsl.obj"
	if exist "$(CONFIG)\obj\makerom.obj" del /Q "$(CONFIG)\obj\makerom.obj"
	if exist "$(CONFIG)\obj\pcre.obj" del /Q "$(CONFIG)\obj\pcre.obj"
	if exist "$(CONFIG)\obj\sqlite3.obj" del /Q "$(CONFIG)\obj\sqlite3.obj"
	if exist "$(CONFIG)\obj\sqlite.obj" del /Q "$(CONFIG)\obj\sqlite.obj"
	if exist "$(CONFIG)\obj\zlib.obj" del /Q "$(CONFIG)\obj\zlib.obj"
	if exist "$(CONFIG)\obj\edi.obj" del /Q "$(CONFIG)\obj\edi.obj"
	if exist "$(CONFIG)\obj\espAbbrev.obj" del /Q "$(CONFIG)\obj\espAbbrev.obj"
	if exist "$(CONFIG)\obj\espDeprecated.obj" del /Q "$(CONFIG)\obj\espDeprecated.obj"
	if exist "$(CONFIG)\obj\espFramework.obj" del /Q "$(CONFIG)\obj\espFramework.obj"
	if exist "$(CONFIG)\obj\espHandler.obj" del /Q "$(CONFIG)\obj\espHandler.obj"
	if exist "$(CONFIG)\obj\espHtml.obj" del /Q "$(CONFIG)\obj\espHtml.obj"
	if exist "$(CONFIG)\obj\espTemplate.obj" del /Q "$(CONFIG)\obj\espTemplate.obj"
	if exist "$(CONFIG)\obj\mdb.obj" del /Q "$(CONFIG)\obj\mdb.obj"
	if exist "$(CONFIG)\obj\sdb.obj" del /Q "$(CONFIG)\obj\sdb.obj"
	if exist "$(CONFIG)\obj\esp.obj" del /Q "$(CONFIG)\obj\esp.obj"
	if exist "$(CONFIG)\obj\removeFiles.obj" del /Q "$(CONFIG)\obj\removeFiles.obj"



#
#   version
#
version: $(DEPS_1)
	echo 0.9.0

#
#   mpr.h
#
$(CONFIG)\inc\mpr.h: $(DEPS_2)
	@echo '      [Copy] $(CONFIG)/inc/mpr.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\paks\mpr\mpr.h $(CONFIG)\inc\mpr.h

#
#   bit.h
#
$(CONFIG)\inc\bit.h: $(DEPS_3)
	@echo '      [Copy] $(CONFIG)/inc/bit.h'

#
#   bitos.h
#
$(CONFIG)\inc\bitos.h: $(DEPS_4)
	@echo '      [Copy] $(CONFIG)/inc/bitos.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\bitos.h $(CONFIG)\inc\bitos.h

#
#   mprLib.obj
#
DEPS_5 = $(DEPS_5) $(CONFIG)\inc\bit.h
DEPS_5 = $(DEPS_5) $(CONFIG)\inc\mpr.h
DEPS_5 = $(DEPS_5) $(CONFIG)\inc\bitos.h

$(CONFIG)\obj\mprLib.obj: \
    src\paks\mpr\mprLib.c $(DEPS_5)
	@echo '   [Compile] $(CONFIG)/obj/mprLib.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\mprLib.obj -Fd$(CONFIG)\obj\mprLib.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\paks\mpr\mprLib.c

#
#   libmpr
#
DEPS_6 = $(DEPS_6) $(CONFIG)\inc\mpr.h
DEPS_6 = $(DEPS_6) $(CONFIG)\inc\bit.h
DEPS_6 = $(DEPS_6) $(CONFIG)\inc\bitos.h
DEPS_6 = $(DEPS_6) $(CONFIG)\obj\mprLib.obj

$(CONFIG)\bin\libmpr.dll: $(DEPS_6)
	@echo '      [Link] $(CONFIG)/bin/libmpr.dll'
	"$(LD)" -dll -out:$(CONFIG)\bin\libmpr.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(CONFIG)\obj\mprLib.obj" $(LIBS) 

#
#   pcre.h
#
$(CONFIG)\inc\pcre.h: $(DEPS_7)
	@echo '      [Copy] $(CONFIG)/inc/pcre.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\paks\pcre\pcre.h $(CONFIG)\inc\pcre.h

#
#   pcre.obj
#
DEPS_8 = $(DEPS_8) $(CONFIG)\inc\bit.h
DEPS_8 = $(DEPS_8) $(CONFIG)\inc\pcre.h

$(CONFIG)\obj\pcre.obj: \
    src\paks\pcre\pcre.c $(DEPS_8)
	@echo '   [Compile] $(CONFIG)/obj/pcre.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\pcre.obj -Fd$(CONFIG)\obj\pcre.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\paks\pcre\pcre.c

!IF "$(BIT_COMP_PCRE)" == "1"
#
#   libpcre
#
DEPS_9 = $(DEPS_9) $(CONFIG)\inc\pcre.h
DEPS_9 = $(DEPS_9) $(CONFIG)\inc\bit.h
DEPS_9 = $(DEPS_9) $(CONFIG)\obj\pcre.obj

$(CONFIG)\bin\libpcre.dll: $(DEPS_9)
	@echo '      [Link] $(CONFIG)/bin/libpcre.dll'
	"$(LD)" -dll -out:$(CONFIG)\bin\libpcre.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(CONFIG)\obj\pcre.obj" $(LIBS) 
!ENDIF

#
#   http.h
#
$(CONFIG)\inc\http.h: $(DEPS_10)
	@echo '      [Copy] $(CONFIG)/inc/http.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\paks\http\http.h $(CONFIG)\inc\http.h

#
#   httpLib.obj
#
DEPS_11 = $(DEPS_11) $(CONFIG)\inc\bit.h
DEPS_11 = $(DEPS_11) $(CONFIG)\inc\http.h
DEPS_11 = $(DEPS_11) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\httpLib.obj: \
    src\paks\http\httpLib.c $(DEPS_11)
	@echo '   [Compile] $(CONFIG)/obj/httpLib.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\httpLib.obj -Fd$(CONFIG)\obj\httpLib.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\paks\http\httpLib.c

#
#   libhttp
#
DEPS_12 = $(DEPS_12) $(CONFIG)\inc\mpr.h
DEPS_12 = $(DEPS_12) $(CONFIG)\inc\bit.h
DEPS_12 = $(DEPS_12) $(CONFIG)\inc\bitos.h
DEPS_12 = $(DEPS_12) $(CONFIG)\obj\mprLib.obj
DEPS_12 = $(DEPS_12) $(CONFIG)\bin\libmpr.dll
DEPS_12 = $(DEPS_12) $(CONFIG)\inc\pcre.h
DEPS_12 = $(DEPS_12) $(CONFIG)\obj\pcre.obj
!IF "$(BIT_COMP_PCRE)" == "1"
DEPS_12 = $(DEPS_12) $(CONFIG)\bin\libpcre.dll
!ENDIF
DEPS_12 = $(DEPS_12) $(CONFIG)\inc\http.h
DEPS_12 = $(DEPS_12) $(CONFIG)\obj\httpLib.obj

LIBS_12 = $(LIBS_12) libmpr.lib
!IF "$(BIT_COMP_PCRE)" == "1"
LIBS_12 = $(LIBS_12) libpcre.lib
!ENDIF

$(CONFIG)\bin\libhttp.dll: $(DEPS_12)
	@echo '      [Link] $(CONFIG)/bin/libhttp.dll'
	"$(LD)" -dll -out:$(CONFIG)\bin\libhttp.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(CONFIG)\obj\httpLib.obj" $(LIBPATHS_12) $(LIBS_12) $(LIBS_12) $(LIBS) 

#
#   appweb.h
#
$(CONFIG)\inc\appweb.h: $(DEPS_13)
	@echo '      [Copy] $(CONFIG)/inc/appweb.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\paks\appweb\appweb.h $(CONFIG)\inc\appweb.h

#
#   appwebLib.obj
#
DEPS_14 = $(DEPS_14) $(CONFIG)\inc\bit.h
DEPS_14 = $(DEPS_14) $(CONFIG)\inc\appweb.h
DEPS_14 = $(DEPS_14) $(CONFIG)\inc\pcre.h
DEPS_14 = $(DEPS_14) $(CONFIG)\inc\mpr.h
DEPS_14 = $(DEPS_14) $(CONFIG)\inc\http.h

$(CONFIG)\obj\appwebLib.obj: \
    src\paks\appweb\appwebLib.c $(DEPS_14)
	@echo '   [Compile] $(CONFIG)/obj/appwebLib.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\appwebLib.obj -Fd$(CONFIG)\obj\appwebLib.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\paks\appweb\appwebLib.c

!IF "$(BIT_COMP_APPWEB)" == "1"
#
#   libappweb
#
DEPS_15 = $(DEPS_15) $(CONFIG)\inc\mpr.h
DEPS_15 = $(DEPS_15) $(CONFIG)\inc\bit.h
DEPS_15 = $(DEPS_15) $(CONFIG)\inc\bitos.h
DEPS_15 = $(DEPS_15) $(CONFIG)\obj\mprLib.obj
DEPS_15 = $(DEPS_15) $(CONFIG)\bin\libmpr.dll
DEPS_15 = $(DEPS_15) $(CONFIG)\inc\pcre.h
DEPS_15 = $(DEPS_15) $(CONFIG)\obj\pcre.obj
!IF "$(BIT_COMP_PCRE)" == "1"
DEPS_15 = $(DEPS_15) $(CONFIG)\bin\libpcre.dll
!ENDIF
DEPS_15 = $(DEPS_15) $(CONFIG)\inc\http.h
DEPS_15 = $(DEPS_15) $(CONFIG)\obj\httpLib.obj
DEPS_15 = $(DEPS_15) $(CONFIG)\bin\libhttp.dll
DEPS_15 = $(DEPS_15) $(CONFIG)\inc\appweb.h
DEPS_15 = $(DEPS_15) $(CONFIG)\obj\appwebLib.obj

LIBS_15 = $(LIBS_15) libhttp.lib
LIBS_15 = $(LIBS_15) libmpr.lib
!IF "$(BIT_COMP_PCRE)" == "1"
LIBS_15 = $(LIBS_15) libpcre.lib
!ENDIF

$(CONFIG)\bin\libappweb.dll: $(DEPS_15)
	@echo '      [Link] $(CONFIG)/bin/libappweb.dll'
	"$(LD)" -dll -out:$(CONFIG)\bin\libappweb.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(CONFIG)\obj\appwebLib.obj" $(LIBPATHS_15) $(LIBS_15) $(LIBS_15) $(LIBS) 
!ENDIF

#
#   esp.h
#
$(CONFIG)\inc\esp.h: $(DEPS_16)
	@echo '      [Copy] $(CONFIG)/inc/esp.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\esp.h $(CONFIG)\inc\esp.h

#
#   appweb.obj
#
DEPS_17 = $(DEPS_17) $(CONFIG)\inc\bit.h
DEPS_17 = $(DEPS_17) $(CONFIG)\inc\appweb.h
DEPS_17 = $(DEPS_17) $(CONFIG)\inc\esp.h

$(CONFIG)\obj\appweb.obj: \
    src\paks\appweb\appweb.c $(DEPS_17)
	@echo '   [Compile] $(CONFIG)/obj/appweb.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\appweb.obj -Fd$(CONFIG)\obj\appweb.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\paks\appweb\appweb.c

!IF "$(BIT_COMP_APPWEB)" == "1"
#
#   appweb
#
DEPS_18 = $(DEPS_18) $(CONFIG)\inc\mpr.h
DEPS_18 = $(DEPS_18) $(CONFIG)\inc\bit.h
DEPS_18 = $(DEPS_18) $(CONFIG)\inc\bitos.h
DEPS_18 = $(DEPS_18) $(CONFIG)\obj\mprLib.obj
DEPS_18 = $(DEPS_18) $(CONFIG)\bin\libmpr.dll
DEPS_18 = $(DEPS_18) $(CONFIG)\inc\pcre.h
DEPS_18 = $(DEPS_18) $(CONFIG)\obj\pcre.obj
!IF "$(BIT_COMP_PCRE)" == "1"
DEPS_18 = $(DEPS_18) $(CONFIG)\bin\libpcre.dll
!ENDIF
DEPS_18 = $(DEPS_18) $(CONFIG)\inc\http.h
DEPS_18 = $(DEPS_18) $(CONFIG)\obj\httpLib.obj
DEPS_18 = $(DEPS_18) $(CONFIG)\bin\libhttp.dll
DEPS_18 = $(DEPS_18) $(CONFIG)\inc\appweb.h
DEPS_18 = $(DEPS_18) $(CONFIG)\obj\appwebLib.obj
DEPS_18 = $(DEPS_18) $(CONFIG)\bin\libappweb.dll
DEPS_18 = $(DEPS_18) $(CONFIG)\inc\esp.h
DEPS_18 = $(DEPS_18) $(CONFIG)\obj\appweb.obj

LIBS_18 = $(LIBS_18) libappweb.lib
LIBS_18 = $(LIBS_18) libhttp.lib
LIBS_18 = $(LIBS_18) libmpr.lib
!IF "$(BIT_COMP_PCRE)" == "1"
LIBS_18 = $(LIBS_18) libpcre.lib
!ENDIF

$(CONFIG)\bin\appweb.exe: $(DEPS_18)
	@echo '      [Link] $(CONFIG)/bin/appweb.exe'
	"$(LD)" -out:$(CONFIG)\bin\appweb.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) "$(CONFIG)\obj\appweb.obj" $(LIBPATHS_18) $(LIBS_18) $(LIBS_18) $(LIBS) 
!ENDIF

#
#   zlib.h
#
$(CONFIG)\inc\zlib.h: $(DEPS_19)
	@echo '      [Copy] $(CONFIG)/inc/zlib.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\paks\zlib\zlib.h $(CONFIG)\inc\zlib.h

#
#   zlib.obj
#
DEPS_20 = $(DEPS_20) $(CONFIG)\inc\bit.h
DEPS_20 = $(DEPS_20) $(CONFIG)\inc\zlib.h
DEPS_20 = $(DEPS_20) $(CONFIG)\inc\bitos.h

$(CONFIG)\obj\zlib.obj: \
    src\paks\zlib\zlib.c $(DEPS_20)
	@echo '   [Compile] $(CONFIG)/obj/zlib.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\zlib.obj -Fd$(CONFIG)\obj\zlib.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\paks\zlib\zlib.c

!IF "$(BIT_COMP_ZLIB)" == "1"
#
#   libzlib
#
DEPS_21 = $(DEPS_21) $(CONFIG)\inc\zlib.h
DEPS_21 = $(DEPS_21) $(CONFIG)\inc\bit.h
DEPS_21 = $(DEPS_21) $(CONFIG)\inc\bitos.h
DEPS_21 = $(DEPS_21) $(CONFIG)\obj\zlib.obj

$(CONFIG)\bin\libzlib.dll: $(DEPS_21)
	@echo '      [Link] $(CONFIG)/bin/libzlib.dll'
	"$(LD)" -dll -out:$(CONFIG)\bin\libzlib.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(CONFIG)\obj\zlib.obj" $(LIBS) 
!ENDIF

#
#   ejs.h
#
$(CONFIG)\inc\ejs.h: $(DEPS_22)
	@echo '      [Copy] $(CONFIG)/inc/ejs.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\paks\ejs\ejs.h $(CONFIG)\inc\ejs.h

#
#   ejs.slots.h
#
$(CONFIG)\inc\ejs.slots.h: $(DEPS_23)
	@echo '      [Copy] $(CONFIG)/inc/ejs.slots.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\paks\ejs\ejs.slots.h $(CONFIG)\inc\ejs.slots.h

#
#   ejsByteGoto.h
#
$(CONFIG)\inc\ejsByteGoto.h: $(DEPS_24)
	@echo '      [Copy] $(CONFIG)/inc/ejsByteGoto.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\paks\ejs\ejsByteGoto.h $(CONFIG)\inc\ejsByteGoto.h

#
#   ejsLib.obj
#
DEPS_25 = $(DEPS_25) $(CONFIG)\inc\bit.h
DEPS_25 = $(DEPS_25) $(CONFIG)\inc\ejs.h
DEPS_25 = $(DEPS_25) $(CONFIG)\inc\mpr.h
DEPS_25 = $(DEPS_25) $(CONFIG)\inc\pcre.h
DEPS_25 = $(DEPS_25) $(CONFIG)\inc\bitos.h
DEPS_25 = $(DEPS_25) $(CONFIG)\inc\http.h
DEPS_25 = $(DEPS_25) $(CONFIG)\inc\ejs.slots.h
DEPS_25 = $(DEPS_25) $(CONFIG)\inc\zlib.h

$(CONFIG)\obj\ejsLib.obj: \
    src\paks\ejs\ejsLib.c $(DEPS_25)
	@echo '   [Compile] $(CONFIG)/obj/ejsLib.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\ejsLib.obj -Fd$(CONFIG)\obj\ejsLib.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\paks\ejs\ejsLib.c

!IF "$(BIT_COMP_EJS)" == "1"
#
#   libejs
#
DEPS_26 = $(DEPS_26) $(CONFIG)\inc\mpr.h
DEPS_26 = $(DEPS_26) $(CONFIG)\inc\bit.h
DEPS_26 = $(DEPS_26) $(CONFIG)\inc\bitos.h
DEPS_26 = $(DEPS_26) $(CONFIG)\obj\mprLib.obj
DEPS_26 = $(DEPS_26) $(CONFIG)\bin\libmpr.dll
DEPS_26 = $(DEPS_26) $(CONFIG)\inc\pcre.h
DEPS_26 = $(DEPS_26) $(CONFIG)\obj\pcre.obj
!IF "$(BIT_COMP_PCRE)" == "1"
DEPS_26 = $(DEPS_26) $(CONFIG)\bin\libpcre.dll
!ENDIF
DEPS_26 = $(DEPS_26) $(CONFIG)\inc\http.h
DEPS_26 = $(DEPS_26) $(CONFIG)\obj\httpLib.obj
DEPS_26 = $(DEPS_26) $(CONFIG)\bin\libhttp.dll
DEPS_26 = $(DEPS_26) $(CONFIG)\inc\zlib.h
DEPS_26 = $(DEPS_26) $(CONFIG)\obj\zlib.obj
!IF "$(BIT_COMP_ZLIB)" == "1"
DEPS_26 = $(DEPS_26) $(CONFIG)\bin\libzlib.dll
!ENDIF
DEPS_26 = $(DEPS_26) $(CONFIG)\inc\ejs.h
DEPS_26 = $(DEPS_26) $(CONFIG)\inc\ejs.slots.h
DEPS_26 = $(DEPS_26) $(CONFIG)\inc\ejsByteGoto.h
DEPS_26 = $(DEPS_26) $(CONFIG)\obj\ejsLib.obj

LIBS_26 = $(LIBS_26) libhttp.lib
LIBS_26 = $(LIBS_26) libmpr.lib
!IF "$(BIT_COMP_PCRE)" == "1"
LIBS_26 = $(LIBS_26) libpcre.lib
!ENDIF
!IF "$(BIT_COMP_ZLIB)" == "1"
LIBS_26 = $(LIBS_26) libzlib.lib
!ENDIF

$(CONFIG)\bin\libejs.dll: $(DEPS_26)
	@echo '      [Link] $(CONFIG)/bin/libejs.dll'
	"$(LD)" -dll -out:$(CONFIG)\bin\libejs.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(CONFIG)\obj\ejsLib.obj" $(LIBPATHS_26) $(LIBS_26) $(LIBS_26) $(LIBS) 
!ENDIF

#
#   ejsc.obj
#
DEPS_27 = $(DEPS_27) $(CONFIG)\inc\bit.h
DEPS_27 = $(DEPS_27) $(CONFIG)\inc\ejs.h

$(CONFIG)\obj\ejsc.obj: \
    src\paks\ejs\ejsc.c $(DEPS_27)
	@echo '   [Compile] $(CONFIG)/obj/ejsc.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\ejsc.obj -Fd$(CONFIG)\obj\ejsc.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\paks\ejs\ejsc.c

!IF "$(BIT_COMP_EJS)" == "1"
#
#   ejsc
#
DEPS_28 = $(DEPS_28) $(CONFIG)\inc\mpr.h
DEPS_28 = $(DEPS_28) $(CONFIG)\inc\bit.h
DEPS_28 = $(DEPS_28) $(CONFIG)\inc\bitos.h
DEPS_28 = $(DEPS_28) $(CONFIG)\obj\mprLib.obj
DEPS_28 = $(DEPS_28) $(CONFIG)\bin\libmpr.dll
DEPS_28 = $(DEPS_28) $(CONFIG)\inc\pcre.h
DEPS_28 = $(DEPS_28) $(CONFIG)\obj\pcre.obj
!IF "$(BIT_COMP_PCRE)" == "1"
DEPS_28 = $(DEPS_28) $(CONFIG)\bin\libpcre.dll
!ENDIF
DEPS_28 = $(DEPS_28) $(CONFIG)\inc\http.h
DEPS_28 = $(DEPS_28) $(CONFIG)\obj\httpLib.obj
DEPS_28 = $(DEPS_28) $(CONFIG)\bin\libhttp.dll
DEPS_28 = $(DEPS_28) $(CONFIG)\inc\zlib.h
DEPS_28 = $(DEPS_28) $(CONFIG)\obj\zlib.obj
!IF "$(BIT_COMP_ZLIB)" == "1"
DEPS_28 = $(DEPS_28) $(CONFIG)\bin\libzlib.dll
!ENDIF
DEPS_28 = $(DEPS_28) $(CONFIG)\inc\ejs.h
DEPS_28 = $(DEPS_28) $(CONFIG)\inc\ejs.slots.h
DEPS_28 = $(DEPS_28) $(CONFIG)\inc\ejsByteGoto.h
DEPS_28 = $(DEPS_28) $(CONFIG)\obj\ejsLib.obj
DEPS_28 = $(DEPS_28) $(CONFIG)\bin\libejs.dll
DEPS_28 = $(DEPS_28) $(CONFIG)\obj\ejsc.obj

LIBS_28 = $(LIBS_28) libejs.lib
LIBS_28 = $(LIBS_28) libhttp.lib
LIBS_28 = $(LIBS_28) libmpr.lib
!IF "$(BIT_COMP_PCRE)" == "1"
LIBS_28 = $(LIBS_28) libpcre.lib
!ENDIF
!IF "$(BIT_COMP_ZLIB)" == "1"
LIBS_28 = $(LIBS_28) libzlib.lib
!ENDIF

$(CONFIG)\bin\ejsc.exe: $(DEPS_28)
	@echo '      [Link] $(CONFIG)/bin/ejsc.exe'
	"$(LD)" -out:$(CONFIG)\bin\ejsc.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) "$(CONFIG)\obj\ejsc.obj" $(LIBPATHS_28) $(LIBS_28) $(LIBS_28) $(LIBS) 
!ENDIF

!IF "$(BIT_COMP_EJS)" == "1"
#
#   ejs.mod
#
DEPS_29 = $(DEPS_29) src\paks\ejs\ejs.es
DEPS_29 = $(DEPS_29) $(CONFIG)\inc\mpr.h
DEPS_29 = $(DEPS_29) $(CONFIG)\inc\bit.h
DEPS_29 = $(DEPS_29) $(CONFIG)\inc\bitos.h
DEPS_29 = $(DEPS_29) $(CONFIG)\obj\mprLib.obj
DEPS_29 = $(DEPS_29) $(CONFIG)\bin\libmpr.dll
DEPS_29 = $(DEPS_29) $(CONFIG)\inc\pcre.h
DEPS_29 = $(DEPS_29) $(CONFIG)\obj\pcre.obj
!IF "$(BIT_COMP_PCRE)" == "1"
DEPS_29 = $(DEPS_29) $(CONFIG)\bin\libpcre.dll
!ENDIF
DEPS_29 = $(DEPS_29) $(CONFIG)\inc\http.h
DEPS_29 = $(DEPS_29) $(CONFIG)\obj\httpLib.obj
DEPS_29 = $(DEPS_29) $(CONFIG)\bin\libhttp.dll
DEPS_29 = $(DEPS_29) $(CONFIG)\inc\zlib.h
DEPS_29 = $(DEPS_29) $(CONFIG)\obj\zlib.obj
!IF "$(BIT_COMP_ZLIB)" == "1"
DEPS_29 = $(DEPS_29) $(CONFIG)\bin\libzlib.dll
!ENDIF
DEPS_29 = $(DEPS_29) $(CONFIG)\inc\ejs.h
DEPS_29 = $(DEPS_29) $(CONFIG)\inc\ejs.slots.h
DEPS_29 = $(DEPS_29) $(CONFIG)\inc\ejsByteGoto.h
DEPS_29 = $(DEPS_29) $(CONFIG)\obj\ejsLib.obj
DEPS_29 = $(DEPS_29) $(CONFIG)\bin\libejs.dll
DEPS_29 = $(DEPS_29) $(CONFIG)\obj\ejsc.obj
DEPS_29 = $(DEPS_29) $(CONFIG)\bin\ejsc.exe

$(CONFIG)\bin\ejs.mod: $(DEPS_29)
	cd src\paks\ejs
	"..\..\..\$(CONFIG)\bin\ejsc" --out "..\..\..\$(CONFIG)\bin\ejs.mod" --optimize 9 --bind --require null ejs.es
	cd ..\..\..
!ENDIF

#
#   est.h
#
$(CONFIG)\inc\est.h: $(DEPS_30)
	@echo '      [Copy] $(CONFIG)/inc/est.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\paks\est\est.h $(CONFIG)\inc\est.h

#
#   estLib.obj
#
DEPS_31 = $(DEPS_31) $(CONFIG)\inc\bit.h
DEPS_31 = $(DEPS_31) $(CONFIG)\inc\est.h
DEPS_31 = $(DEPS_31) $(CONFIG)\inc\bitos.h

$(CONFIG)\obj\estLib.obj: \
    src\paks\est\estLib.c $(DEPS_31)
	@echo '   [Compile] $(CONFIG)/obj/estLib.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\estLib.obj -Fd$(CONFIG)\obj\estLib.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\paks\est\estLib.c

!IF "$(BIT_COMP_EST)" == "1"
#
#   libest
#
DEPS_32 = $(DEPS_32) $(CONFIG)\inc\est.h
DEPS_32 = $(DEPS_32) $(CONFIG)\inc\bit.h
DEPS_32 = $(DEPS_32) $(CONFIG)\inc\bitos.h
DEPS_32 = $(DEPS_32) $(CONFIG)\obj\estLib.obj

$(CONFIG)\bin\libest.dll: $(DEPS_32)
	@echo '      [Link] $(CONFIG)/bin/libest.dll'
	"$(LD)" -dll -out:$(CONFIG)\bin\libest.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(CONFIG)\obj\estLib.obj" $(LIBS) 
!ENDIF

#
#   ca-crt
#
DEPS_33 = $(DEPS_33) src\paks\est\ca.crt

$(CONFIG)\bin\ca.crt: $(DEPS_33)
	@echo '      [Copy] $(CONFIG)/bin/ca.crt'
	if not exist "$(CONFIG)\bin" md "$(CONFIG)\bin"
	copy /Y src\paks\est\ca.crt $(CONFIG)\bin\ca.crt

#
#   http.obj
#
DEPS_34 = $(DEPS_34) $(CONFIG)\inc\bit.h
DEPS_34 = $(DEPS_34) $(CONFIG)\inc\http.h

$(CONFIG)\obj\http.obj: \
    src\paks\http\http.c $(DEPS_34)
	@echo '   [Compile] $(CONFIG)/obj/http.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\http.obj -Fd$(CONFIG)\obj\http.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\paks\http\http.c

#
#   http
#
DEPS_35 = $(DEPS_35) $(CONFIG)\inc\mpr.h
DEPS_35 = $(DEPS_35) $(CONFIG)\inc\bit.h
DEPS_35 = $(DEPS_35) $(CONFIG)\inc\bitos.h
DEPS_35 = $(DEPS_35) $(CONFIG)\obj\mprLib.obj
DEPS_35 = $(DEPS_35) $(CONFIG)\bin\libmpr.dll
DEPS_35 = $(DEPS_35) $(CONFIG)\inc\pcre.h
DEPS_35 = $(DEPS_35) $(CONFIG)\obj\pcre.obj
!IF "$(BIT_COMP_PCRE)" == "1"
DEPS_35 = $(DEPS_35) $(CONFIG)\bin\libpcre.dll
!ENDIF
DEPS_35 = $(DEPS_35) $(CONFIG)\inc\http.h
DEPS_35 = $(DEPS_35) $(CONFIG)\obj\httpLib.obj
DEPS_35 = $(DEPS_35) $(CONFIG)\bin\libhttp.dll
DEPS_35 = $(DEPS_35) $(CONFIG)\obj\http.obj

LIBS_35 = $(LIBS_35) libhttp.lib
LIBS_35 = $(LIBS_35) libmpr.lib
!IF "$(BIT_COMP_PCRE)" == "1"
LIBS_35 = $(LIBS_35) libpcre.lib
!ENDIF

$(CONFIG)\bin\http.exe: $(DEPS_35)
	@echo '      [Link] $(CONFIG)/bin/http.exe'
	"$(LD)" -out:$(CONFIG)\bin\http.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) "$(CONFIG)\obj\http.obj" $(LIBPATHS_35) $(LIBS_35) $(LIBS_35) $(LIBS) 

#
#   mprSsl.obj
#
DEPS_36 = $(DEPS_36) $(CONFIG)\inc\bit.h
DEPS_36 = $(DEPS_36) $(CONFIG)\inc\mpr.h
DEPS_36 = $(DEPS_36) $(CONFIG)\inc\est.h

$(CONFIG)\obj\mprSsl.obj: \
    src\paks\mpr\mprSsl.c $(DEPS_36)
	@echo '   [Compile] $(CONFIG)/obj/mprSsl.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\mprSsl.obj -Fd$(CONFIG)\obj\mprSsl.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\paks\mpr\mprSsl.c

#
#   libmprssl
#
DEPS_37 = $(DEPS_37) $(CONFIG)\inc\mpr.h
DEPS_37 = $(DEPS_37) $(CONFIG)\inc\bit.h
DEPS_37 = $(DEPS_37) $(CONFIG)\inc\bitos.h
DEPS_37 = $(DEPS_37) $(CONFIG)\obj\mprLib.obj
DEPS_37 = $(DEPS_37) $(CONFIG)\bin\libmpr.dll
DEPS_37 = $(DEPS_37) $(CONFIG)\inc\est.h
DEPS_37 = $(DEPS_37) $(CONFIG)\obj\estLib.obj
!IF "$(BIT_COMP_EST)" == "1"
DEPS_37 = $(DEPS_37) $(CONFIG)\bin\libest.dll
!ENDIF
DEPS_37 = $(DEPS_37) $(CONFIG)\obj\mprSsl.obj

LIBS_37 = $(LIBS_37) libmpr.lib
!IF "$(BIT_COMP_EST)" == "1"
LIBS_37 = $(LIBS_37) libest.lib
!ENDIF

$(CONFIG)\bin\libmprssl.dll: $(DEPS_37)
	@echo '      [Link] $(CONFIG)/bin/libmprssl.dll'
	"$(LD)" -dll -out:$(CONFIG)\bin\libmprssl.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(CONFIG)\obj\mprSsl.obj" $(LIBPATHS_37) $(LIBS_37) $(LIBS_37) $(LIBS) 

#
#   sqlite3.h
#
$(CONFIG)\inc\sqlite3.h: $(DEPS_38)
	@echo '      [Copy] $(CONFIG)/inc/sqlite3.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\paks\sqlite\sqlite3.h $(CONFIG)\inc\sqlite3.h

#
#   sqlite3.obj
#
DEPS_39 = $(DEPS_39) $(CONFIG)\inc\bit.h
DEPS_39 = $(DEPS_39) $(CONFIG)\inc\sqlite3.h

$(CONFIG)\obj\sqlite3.obj: \
    src\paks\sqlite\sqlite3.c $(DEPS_39)
	@echo '   [Compile] $(CONFIG)/obj/sqlite3.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\sqlite3.obj -Fd$(CONFIG)\obj\sqlite3.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\paks\sqlite\sqlite3.c

!IF "$(BIT_COMP_SQLITE)" == "1"
#
#   libsql
#
DEPS_40 = $(DEPS_40) $(CONFIG)\inc\sqlite3.h
DEPS_40 = $(DEPS_40) $(CONFIG)\inc\bit.h
DEPS_40 = $(DEPS_40) $(CONFIG)\obj\sqlite3.obj

$(CONFIG)\bin\libsql.dll: $(DEPS_40)
	@echo '      [Link] $(CONFIG)/bin/libsql.dll'
	"$(LD)" -dll -out:$(CONFIG)\bin\libsql.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(CONFIG)\obj\sqlite3.obj" $(LIBS) 
!ENDIF

#
#   sqlite.obj
#
DEPS_41 = $(DEPS_41) $(CONFIG)\inc\bit.h
DEPS_41 = $(DEPS_41) $(CONFIG)\inc\sqlite3.h

$(CONFIG)\obj\sqlite.obj: \
    src\paks\sqlite\sqlite.c $(DEPS_41)
	@echo '   [Compile] $(CONFIG)/obj/sqlite.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\sqlite.obj -Fd$(CONFIG)\obj\sqlite.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\paks\sqlite\sqlite.c

!IF "$(BIT_COMP_SQLITE)" == "1"
#
#   sqliteshell
#
DEPS_42 = $(DEPS_42) $(CONFIG)\inc\sqlite3.h
DEPS_42 = $(DEPS_42) $(CONFIG)\inc\bit.h
DEPS_42 = $(DEPS_42) $(CONFIG)\obj\sqlite3.obj
DEPS_42 = $(DEPS_42) $(CONFIG)\bin\libsql.dll
DEPS_42 = $(DEPS_42) $(CONFIG)\obj\sqlite.obj

LIBS_42 = $(LIBS_42) libsql.lib

$(CONFIG)\bin\sqlite.exe: $(DEPS_42)
	@echo '      [Link] $(CONFIG)/bin/sqlite.exe'
	"$(LD)" -out:$(CONFIG)\bin\sqlite.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) "$(CONFIG)\obj\sqlite.obj" $(LIBPATHS_42) $(LIBS_42) $(LIBS_42) $(LIBS) 
!ENDIF

#
#   edi.h
#
$(CONFIG)\inc\edi.h: $(DEPS_43)
	@echo '      [Copy] $(CONFIG)/inc/edi.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\edi.h $(CONFIG)\inc\edi.h

#
#   mdb.h
#
$(CONFIG)\inc\mdb.h: $(DEPS_44)
	@echo '      [Copy] $(CONFIG)/inc/mdb.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\mdb.h $(CONFIG)\inc\mdb.h

#
#   edi.obj
#
DEPS_45 = $(DEPS_45) $(CONFIG)\inc\bit.h
DEPS_45 = $(DEPS_45) $(CONFIG)\inc\edi.h
DEPS_45 = $(DEPS_45) $(CONFIG)\inc\pcre.h

$(CONFIG)\obj\edi.obj: \
    src\edi.c $(DEPS_45)
	@echo '   [Compile] $(CONFIG)/obj/edi.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\edi.obj -Fd$(CONFIG)\obj\edi.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\edi.c

#
#   espAbbrev.obj
#
DEPS_46 = $(DEPS_46) $(CONFIG)\inc\bit.h
DEPS_46 = $(DEPS_46) $(CONFIG)\inc\esp.h

$(CONFIG)\obj\espAbbrev.obj: \
    src\espAbbrev.c $(DEPS_46)
	@echo '   [Compile] $(CONFIG)/obj/espAbbrev.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\espAbbrev.obj -Fd$(CONFIG)\obj\espAbbrev.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\espAbbrev.c

#
#   espDeprecated.obj
#
DEPS_47 = $(DEPS_47) $(CONFIG)\inc\bit.h
DEPS_47 = $(DEPS_47) $(CONFIG)\inc\esp.h
DEPS_47 = $(DEPS_47) $(CONFIG)\inc\edi.h

$(CONFIG)\obj\espDeprecated.obj: \
    src\espDeprecated.c $(DEPS_47)
	@echo '   [Compile] $(CONFIG)/obj/espDeprecated.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\espDeprecated.obj -Fd$(CONFIG)\obj\espDeprecated.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\espDeprecated.c

#
#   espFramework.obj
#
DEPS_48 = $(DEPS_48) $(CONFIG)\inc\bit.h
DEPS_48 = $(DEPS_48) $(CONFIG)\inc\esp.h

$(CONFIG)\obj\espFramework.obj: \
    src\espFramework.c $(DEPS_48)
	@echo '   [Compile] $(CONFIG)/obj/espFramework.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\espFramework.obj -Fd$(CONFIG)\obj\espFramework.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\espFramework.c

#
#   espHandler.obj
#
DEPS_49 = $(DEPS_49) $(CONFIG)\inc\bit.h
DEPS_49 = $(DEPS_49) $(CONFIG)\inc\http.h
DEPS_49 = $(DEPS_49) $(CONFIG)\inc\esp.h
DEPS_49 = $(DEPS_49) $(CONFIG)\inc\edi.h

$(CONFIG)\obj\espHandler.obj: \
    src\espHandler.c $(DEPS_49)
	@echo '   [Compile] $(CONFIG)/obj/espHandler.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\espHandler.obj -Fd$(CONFIG)\obj\espHandler.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\espHandler.c

#
#   espHtml.obj
#
DEPS_50 = $(DEPS_50) $(CONFIG)\inc\bit.h
DEPS_50 = $(DEPS_50) $(CONFIG)\inc\esp.h
DEPS_50 = $(DEPS_50) $(CONFIG)\inc\edi.h

$(CONFIG)\obj\espHtml.obj: \
    src\espHtml.c $(DEPS_50)
	@echo '   [Compile] $(CONFIG)/obj/espHtml.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\espHtml.obj -Fd$(CONFIG)\obj\espHtml.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\espHtml.c

#
#   espTemplate.obj
#
DEPS_51 = $(DEPS_51) $(CONFIG)\inc\bit.h
DEPS_51 = $(DEPS_51) $(CONFIG)\inc\esp.h

$(CONFIG)\obj\espTemplate.obj: \
    src\espTemplate.c $(DEPS_51)
	@echo '   [Compile] $(CONFIG)/obj/espTemplate.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\espTemplate.obj -Fd$(CONFIG)\obj\espTemplate.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\espTemplate.c

#
#   mdb.obj
#
DEPS_52 = $(DEPS_52) $(CONFIG)\inc\bit.h
DEPS_52 = $(DEPS_52) $(CONFIG)\inc\http.h
DEPS_52 = $(DEPS_52) $(CONFIG)\inc\edi.h
DEPS_52 = $(DEPS_52) $(CONFIG)\inc\mdb.h
DEPS_52 = $(DEPS_52) $(CONFIG)\inc\pcre.h

$(CONFIG)\obj\mdb.obj: \
    src\mdb.c $(DEPS_52)
	@echo '   [Compile] $(CONFIG)/obj/mdb.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\mdb.obj -Fd$(CONFIG)\obj\mdb.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\mdb.c

#
#   sdb.obj
#
DEPS_53 = $(DEPS_53) $(CONFIG)\inc\bit.h
DEPS_53 = $(DEPS_53) $(CONFIG)\inc\http.h

$(CONFIG)\obj\sdb.obj: \
    src\sdb.c $(DEPS_53)
	@echo '   [Compile] $(CONFIG)/obj/sdb.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\sdb.obj -Fd$(CONFIG)\obj\sdb.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\sdb.c

#
#   libmod_esp
#
DEPS_54 = $(DEPS_54) $(CONFIG)\inc\mpr.h
DEPS_54 = $(DEPS_54) $(CONFIG)\inc\bit.h
DEPS_54 = $(DEPS_54) $(CONFIG)\inc\bitos.h
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\mprLib.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\bin\libmpr.dll
DEPS_54 = $(DEPS_54) $(CONFIG)\inc\pcre.h
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\pcre.obj
!IF "$(BIT_COMP_PCRE)" == "1"
DEPS_54 = $(DEPS_54) $(CONFIG)\bin\libpcre.dll
!ENDIF
DEPS_54 = $(DEPS_54) $(CONFIG)\inc\http.h
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\httpLib.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\bin\libhttp.dll
DEPS_54 = $(DEPS_54) $(CONFIG)\inc\appweb.h
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\appwebLib.obj
!IF "$(BIT_COMP_APPWEB)" == "1"
DEPS_54 = $(DEPS_54) $(CONFIG)\bin\libappweb.dll
!ENDIF
DEPS_54 = $(DEPS_54) $(CONFIG)\inc\edi.h
DEPS_54 = $(DEPS_54) $(CONFIG)\inc\esp.h
DEPS_54 = $(DEPS_54) $(CONFIG)\inc\mdb.h
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\edi.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\espAbbrev.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\espDeprecated.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\espFramework.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\espHandler.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\espHtml.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\espTemplate.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\mdb.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\sdb.obj

!IF "$(BIT_COMP_APPWEB)" == "1"
LIBS_54 = $(LIBS_54) libappweb.lib
!ENDIF
LIBS_54 = $(LIBS_54) libhttp.lib
LIBS_54 = $(LIBS_54) libmpr.lib
!IF "$(BIT_COMP_PCRE)" == "1"
LIBS_54 = $(LIBS_54) libpcre.lib
!ENDIF
!IF "$(BIT_COMP_SQLITE)" == "1"
LIBS_54 = $(LIBS_54) libsql.lib
!ENDIF

$(CONFIG)\bin\libmod_esp.dll: $(DEPS_54)
	@echo '      [Link] $(CONFIG)/bin/libmod_esp.dll'
	"$(LD)" -dll -out:$(CONFIG)\bin\libmod_esp.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(CONFIG)\obj\edi.obj" "$(CONFIG)\obj\espAbbrev.obj" "$(CONFIG)\obj\espDeprecated.obj" "$(CONFIG)\obj\espFramework.obj" "$(CONFIG)\obj\espHandler.obj" "$(CONFIG)\obj\espHtml.obj" "$(CONFIG)\obj\espTemplate.obj" "$(CONFIG)\obj\mdb.obj" "$(CONFIG)\obj\sdb.obj" $(LIBPATHS_54) $(LIBS_54) $(LIBS_54) $(LIBS) 

#
#   esp.obj
#
DEPS_55 = $(DEPS_55) $(CONFIG)\inc\bit.h
DEPS_55 = $(DEPS_55) $(CONFIG)\inc\esp.h

$(CONFIG)\obj\esp.obj: \
    src\esp.c $(DEPS_55)
	@echo '   [Compile] $(CONFIG)/obj/esp.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\esp.obj -Fd$(CONFIG)\obj\esp.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\esp.c

#
#   espcmd
#
DEPS_56 = $(DEPS_56) $(CONFIG)\inc\mpr.h
DEPS_56 = $(DEPS_56) $(CONFIG)\inc\bit.h
DEPS_56 = $(DEPS_56) $(CONFIG)\inc\bitos.h
DEPS_56 = $(DEPS_56) $(CONFIG)\obj\mprLib.obj
DEPS_56 = $(DEPS_56) $(CONFIG)\bin\libmpr.dll
DEPS_56 = $(DEPS_56) $(CONFIG)\inc\pcre.h
DEPS_56 = $(DEPS_56) $(CONFIG)\obj\pcre.obj
!IF "$(BIT_COMP_PCRE)" == "1"
DEPS_56 = $(DEPS_56) $(CONFIG)\bin\libpcre.dll
!ENDIF
DEPS_56 = $(DEPS_56) $(CONFIG)\inc\http.h
DEPS_56 = $(DEPS_56) $(CONFIG)\obj\httpLib.obj
DEPS_56 = $(DEPS_56) $(CONFIG)\bin\libhttp.dll
DEPS_56 = $(DEPS_56) $(CONFIG)\inc\appweb.h
DEPS_56 = $(DEPS_56) $(CONFIG)\obj\appwebLib.obj
!IF "$(BIT_COMP_APPWEB)" == "1"
DEPS_56 = $(DEPS_56) $(CONFIG)\bin\libappweb.dll
!ENDIF
DEPS_56 = $(DEPS_56) $(CONFIG)\inc\edi.h
DEPS_56 = $(DEPS_56) $(CONFIG)\inc\esp.h
DEPS_56 = $(DEPS_56) $(CONFIG)\inc\mdb.h
DEPS_56 = $(DEPS_56) $(CONFIG)\obj\edi.obj
DEPS_56 = $(DEPS_56) $(CONFIG)\obj\espAbbrev.obj
DEPS_56 = $(DEPS_56) $(CONFIG)\obj\espDeprecated.obj
DEPS_56 = $(DEPS_56) $(CONFIG)\obj\espFramework.obj
DEPS_56 = $(DEPS_56) $(CONFIG)\obj\espHandler.obj
DEPS_56 = $(DEPS_56) $(CONFIG)\obj\espHtml.obj
DEPS_56 = $(DEPS_56) $(CONFIG)\obj\espTemplate.obj
DEPS_56 = $(DEPS_56) $(CONFIG)\obj\mdb.obj
DEPS_56 = $(DEPS_56) $(CONFIG)\obj\sdb.obj
DEPS_56 = $(DEPS_56) $(CONFIG)\bin\libmod_esp.dll
DEPS_56 = $(DEPS_56) $(CONFIG)\obj\esp.obj

!IF "$(BIT_COMP_APPWEB)" == "1"
LIBS_56 = $(LIBS_56) libappweb.lib
!ENDIF
LIBS_56 = $(LIBS_56) libhttp.lib
LIBS_56 = $(LIBS_56) libmpr.lib
!IF "$(BIT_COMP_PCRE)" == "1"
LIBS_56 = $(LIBS_56) libpcre.lib
!ENDIF
!IF "$(BIT_COMP_SQLITE)" == "1"
LIBS_56 = $(LIBS_56) libsql.lib
!ENDIF
LIBS_56 = $(LIBS_56) libmod_esp.lib

$(CONFIG)\bin\esp.exe: $(DEPS_56)
	@echo '      [Link] $(CONFIG)/bin/esp.exe'
	"$(LD)" -out:$(CONFIG)\bin\esp.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) "$(CONFIG)\obj\edi.obj" "$(CONFIG)\obj\esp.obj" "$(CONFIG)\obj\espAbbrev.obj" "$(CONFIG)\obj\espDeprecated.obj" "$(CONFIG)\obj\espFramework.obj" "$(CONFIG)\obj\espHandler.obj" "$(CONFIG)\obj\espHtml.obj" "$(CONFIG)\obj\espTemplate.obj" "$(CONFIG)\obj\mdb.obj" "$(CONFIG)\obj\sdb.obj" $(LIBPATHS_56) $(LIBS_56) $(LIBS_56) $(LIBS) 

#
#   esp.conf
#
DEPS_57 = $(DEPS_57) src\esp.conf

$(CONFIG)\bin\esp.conf: $(DEPS_57)
	@echo '      [Copy] $(CONFIG)/bin/esp.conf'
	if not exist "$(CONFIG)\bin" md "$(CONFIG)\bin"
	copy /Y src\esp.conf $(CONFIG)\bin\esp.conf

#
#   esp-paks
#
DEPS_58 = $(DEPS_58) src\paks\angular
DEPS_58 = $(DEPS_58) src\paks\angular\angular-animate.js
DEPS_58 = $(DEPS_58) src\paks\angular\angular-csp.css
DEPS_58 = $(DEPS_58) src\paks\angular\angular-route.js
DEPS_58 = $(DEPS_58) src\paks\angular\angular.js
DEPS_58 = $(DEPS_58) src\paks\angular\package.json
DEPS_58 = $(DEPS_58) src\paks\appweb
DEPS_58 = $(DEPS_58) src\paks\appweb\appweb.bit
DEPS_58 = $(DEPS_58) src\paks\appweb\appweb.c
DEPS_58 = $(DEPS_58) src\paks\appweb\appweb.h
DEPS_58 = $(DEPS_58) src\paks\appweb\appwebLib.c
DEPS_58 = $(DEPS_58) src\paks\appweb\bower.json
DEPS_58 = $(DEPS_58) src\paks\appweb\LICENSE.md
DEPS_58 = $(DEPS_58) src\paks\appweb\package.json
DEPS_58 = $(DEPS_58) src\paks\appweb\README.md
DEPS_58 = $(DEPS_58) src\paks\bitos
DEPS_58 = $(DEPS_58) src\paks\bitos\bitos.bit
DEPS_58 = $(DEPS_58) src\paks\bitos\bower.json
DEPS_58 = $(DEPS_58) src\paks\bitos\LICENSE.md
DEPS_58 = $(DEPS_58) src\paks\bitos\package.json
DEPS_58 = $(DEPS_58) src\paks\bitos\README.md
DEPS_58 = $(DEPS_58) src\paks\bitos\src
DEPS_58 = $(DEPS_58) src\paks\ejs
DEPS_58 = $(DEPS_58) src\paks\ejs\bower.json
DEPS_58 = $(DEPS_58) src\paks\ejs\ejs.bit
DEPS_58 = $(DEPS_58) src\paks\ejs\ejs.c
DEPS_58 = $(DEPS_58) src\paks\ejs\ejs.es
DEPS_58 = $(DEPS_58) src\paks\ejs\ejs.h
DEPS_58 = $(DEPS_58) src\paks\ejs\ejs.slots.h
DEPS_58 = $(DEPS_58) src\paks\ejs\ejsByteGoto.h
DEPS_58 = $(DEPS_58) src\paks\ejs\ejsc.c
DEPS_58 = $(DEPS_58) src\paks\ejs\ejsLib.c
DEPS_58 = $(DEPS_58) src\paks\ejs\LICENSE.md
DEPS_58 = $(DEPS_58) src\paks\ejs\package.json
DEPS_58 = $(DEPS_58) src\paks\ejs\README.md
DEPS_58 = $(DEPS_58) src\paks\esp-angular
DEPS_58 = $(DEPS_58) src\paks\esp-angular\esp-click.js
DEPS_58 = $(DEPS_58) src\paks\esp-angular\esp-edit.js
DEPS_58 = $(DEPS_58) src\paks\esp-angular\esp-field-errors.js
DEPS_58 = $(DEPS_58) src\paks\esp-angular\esp-fixnum.js
DEPS_58 = $(DEPS_58) src\paks\esp-angular\esp-format.js
DEPS_58 = $(DEPS_58) src\paks\esp-angular\esp-input-group.js
DEPS_58 = $(DEPS_58) src\paks\esp-angular\esp-input.js
DEPS_58 = $(DEPS_58) src\paks\esp-angular\esp-resource.js
DEPS_58 = $(DEPS_58) src\paks\esp-angular\esp-session.js
DEPS_58 = $(DEPS_58) src\paks\esp-angular\esp-titlecase.js
DEPS_58 = $(DEPS_58) src\paks\esp-angular\esp.js
DEPS_58 = $(DEPS_58) src\paks\esp-angular\package.json
DEPS_58 = $(DEPS_58) src\paks\esp-angular-mvc
DEPS_58 = $(DEPS_58) src\paks\esp-angular-mvc\package.json
DEPS_58 = $(DEPS_58) src\paks\esp-html-mvc
DEPS_58 = $(DEPS_58) src\paks\esp-html-mvc\package.json
DEPS_58 = $(DEPS_58) src\paks\esp-legacy-mvc
DEPS_58 = $(DEPS_58) src\paks\esp-legacy-mvc\package.json
DEPS_58 = $(DEPS_58) src\paks\esp-server
DEPS_58 = $(DEPS_58) src\paks\esp-server\package.json
DEPS_58 = $(DEPS_58) src\paks\est
DEPS_58 = $(DEPS_58) src\paks\est\bower.json
DEPS_58 = $(DEPS_58) src\paks\est\ca.crt
DEPS_58 = $(DEPS_58) src\paks\est\est.bit
DEPS_58 = $(DEPS_58) src\paks\est\est.h
DEPS_58 = $(DEPS_58) src\paks\est\estLib.c
DEPS_58 = $(DEPS_58) src\paks\est\LICENSE.md
DEPS_58 = $(DEPS_58) src\paks\est\package.json
DEPS_58 = $(DEPS_58) src\paks\est\README.md
DEPS_58 = $(DEPS_58) src\paks\http
DEPS_58 = $(DEPS_58) src\paks\http\bower.json
DEPS_58 = $(DEPS_58) src\paks\http\http.bit
DEPS_58 = $(DEPS_58) src\paks\http\http.c
DEPS_58 = $(DEPS_58) src\paks\http\http.h
DEPS_58 = $(DEPS_58) src\paks\http\httpLib.c
DEPS_58 = $(DEPS_58) src\paks\http\LICENSE.md
DEPS_58 = $(DEPS_58) src\paks\http\package.json
DEPS_58 = $(DEPS_58) src\paks\http\README.md
DEPS_58 = $(DEPS_58) src\paks\mpr
DEPS_58 = $(DEPS_58) src\paks\mpr\bower.json
DEPS_58 = $(DEPS_58) src\paks\mpr\LICENSE.md
DEPS_58 = $(DEPS_58) src\paks\mpr\makerom.c
DEPS_58 = $(DEPS_58) src\paks\mpr\manager.c
DEPS_58 = $(DEPS_58) src\paks\mpr\mpr.bit
DEPS_58 = $(DEPS_58) src\paks\mpr\mpr.h
DEPS_58 = $(DEPS_58) src\paks\mpr\mprLib.c
DEPS_58 = $(DEPS_58) src\paks\mpr\mprSsl.c
DEPS_58 = $(DEPS_58) src\paks\mpr\package.json
DEPS_58 = $(DEPS_58) src\paks\mpr\README.md
DEPS_58 = $(DEPS_58) src\paks\pcre
DEPS_58 = $(DEPS_58) src\paks\pcre\bower.json
DEPS_58 = $(DEPS_58) src\paks\pcre\LICENSE.md
DEPS_58 = $(DEPS_58) src\paks\pcre\package.json
DEPS_58 = $(DEPS_58) src\paks\pcre\pcre.bit
DEPS_58 = $(DEPS_58) src\paks\pcre\pcre.c
DEPS_58 = $(DEPS_58) src\paks\pcre\pcre.h
DEPS_58 = $(DEPS_58) src\paks\pcre\README.md
DEPS_58 = $(DEPS_58) src\paks\sqlite
DEPS_58 = $(DEPS_58) src\paks\sqlite\bower.json
DEPS_58 = $(DEPS_58) src\paks\sqlite\LICENSE.md
DEPS_58 = $(DEPS_58) src\paks\sqlite\package.json
DEPS_58 = $(DEPS_58) src\paks\sqlite\README.md
DEPS_58 = $(DEPS_58) src\paks\sqlite\sqlite.bit
DEPS_58 = $(DEPS_58) src\paks\sqlite\sqlite.c
DEPS_58 = $(DEPS_58) src\paks\sqlite\sqlite3.c
DEPS_58 = $(DEPS_58) src\paks\sqlite\sqlite3.h
DEPS_58 = $(DEPS_58) src\paks\zlib
DEPS_58 = $(DEPS_58) src\paks\zlib\bower.json
DEPS_58 = $(DEPS_58) src\paks\zlib\LICENSE.md
DEPS_58 = $(DEPS_58) src\paks\zlib\package.json
DEPS_58 = $(DEPS_58) src\paks\zlib\README.md
DEPS_58 = $(DEPS_58) src\paks\zlib\zlib.bit
DEPS_58 = $(DEPS_58) src\paks\zlib\zlib.c
DEPS_58 = $(DEPS_58) src\paks\zlib\zlib.h

$(CONFIG)\paks: $(DEPS_58)
	cd src\paks
	if not exist "..\..\$(CONFIG)\paks\esp-angular\4.5.1" md "..\..\$(CONFIG)\paks\esp-angular\4.5.1"
	copy /Y esp-angular\esp-click.js ..\..\$(CONFIG)\paks\esp-angular\4.5.1\esp-click.js
	copy /Y esp-angular\esp-edit.js ..\..\$(CONFIG)\paks\esp-angular\4.5.1\esp-edit.js
	copy /Y esp-angular\esp-field-errors.js ..\..\$(CONFIG)\paks\esp-angular\4.5.1\esp-field-errors.js
	copy /Y esp-angular\esp-fixnum.js ..\..\$(CONFIG)\paks\esp-angular\4.5.1\esp-fixnum.js
	copy /Y esp-angular\esp-format.js ..\..\$(CONFIG)\paks\esp-angular\4.5.1\esp-format.js
	copy /Y esp-angular\esp-input-group.js ..\..\$(CONFIG)\paks\esp-angular\4.5.1\esp-input-group.js
	copy /Y esp-angular\esp-input.js ..\..\$(CONFIG)\paks\esp-angular\4.5.1\esp-input.js
	copy /Y esp-angular\esp-resource.js ..\..\$(CONFIG)\paks\esp-angular\4.5.1\esp-resource.js
	copy /Y esp-angular\esp-session.js ..\..\$(CONFIG)\paks\esp-angular\4.5.1\esp-session.js
	copy /Y esp-angular\esp-titlecase.js ..\..\$(CONFIG)\paks\esp-angular\4.5.1\esp-titlecase.js
	copy /Y esp-angular\esp.js ..\..\$(CONFIG)\paks\esp-angular\4.5.1\esp.js
	copy /Y esp-angular\package.json ..\..\$(CONFIG)\paks\esp-angular\4.5.1\package.json
	if not exist "..\..\$(CONFIG)\paks\esp-angular-mvc\4.5.1" md "..\..\$(CONFIG)\paks\esp-angular-mvc\4.5.1"
	copy /Y esp-angular-mvc\package.json ..\..\$(CONFIG)\paks\esp-angular-mvc\4.5.1\package.json
	if not exist "..\..\$(CONFIG)\paks\esp-html-mvc\4.5.1" md "..\..\$(CONFIG)\paks\esp-html-mvc\4.5.1"
	copy /Y esp-html-mvc\package.json ..\..\$(CONFIG)\paks\esp-html-mvc\4.5.1\package.json
	if not exist "..\..\$(CONFIG)\paks\esp-legacy-mvc\4.5.1" md "..\..\$(CONFIG)\paks\esp-legacy-mvc\4.5.1"
	copy /Y esp-legacy-mvc\package.json ..\..\$(CONFIG)\paks\esp-legacy-mvc\4.5.1\package.json
	if not exist "..\..\$(CONFIG)\paks\esp-server\4.5.1" md "..\..\$(CONFIG)\paks\esp-server\4.5.1"
	copy /Y esp-server\package.json ..\..\$(CONFIG)\paks\esp-server\4.5.1\package.json
	cd ..\..

#
#   removeFiles.obj
#
DEPS_59 = $(DEPS_59) $(CONFIG)\inc\bit.h

$(CONFIG)\obj\removeFiles.obj: \
    package\windows\removeFiles.c $(DEPS_59)
	@echo '   [Compile] $(CONFIG)/obj/removeFiles.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\removeFiles.obj -Fd$(CONFIG)\obj\removeFiles.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) package\windows\removeFiles.c

#
#   removeFiles
#
DEPS_60 = $(DEPS_60) $(CONFIG)\inc\bit.h
DEPS_60 = $(DEPS_60) $(CONFIG)\obj\removeFiles.obj

$(CONFIG)\bin\removeFiles.exe: $(DEPS_60)
	@echo '      [Link] $(CONFIG)/bin/removeFiles.exe'
	"$(LD)" -out:$(CONFIG)\bin\removeFiles.exe -entry:WinMainCRTStartup -subsystem:windows $(LDFLAGS) $(LIBPATHS) "$(CONFIG)\obj\removeFiles.obj" $(LIBS) 

#
#   bower.json
#
DEPS_61 = $(DEPS_61) package.json

bower.json: $(DEPS_61)
	@echo '      [Copy] bower.json'
	if not exist "." md "."
	copy /Y package.json bower.json

#
#   stop
#
stop: $(DEPS_62)
#  Omit build script stop

#
#   installBinary
#
installBinary: $(DEPS_63)
	cd .
	if not exist "$(BIT_VAPP_PREFIX)\bin" md "$(BIT_VAPP_PREFIX)\bin"
	copy /Y $(CONFIG)\bin\pak.exe "$(BIT_VAPP_PREFIX)\bin\pak.exe"
	copy /Y $(CONFIG)\bin\libejs.dll "$(BIT_VAPP_PREFIX)\bin\libejs.dll"
	copy /Y $(CONFIG)\bin\libest.dll "$(BIT_VAPP_PREFIX)\bin\libest.dll"
	copy /Y $(CONFIG)\bin\libhttp.dll "$(BIT_VAPP_PREFIX)\bin\libhttp.dll"
	copy /Y $(CONFIG)\bin\libmpr.dll "$(BIT_VAPP_PREFIX)\bin\libmpr.dll"
	copy /Y $(CONFIG)\bin\libmprssl.dll "$(BIT_VAPP_PREFIX)\bin\libmprssl.dll"
	copy /Y $(CONFIG)\bin\libpcre.dll "$(BIT_VAPP_PREFIX)\bin\libpcre.dll"
	copy /Y $(CONFIG)\bin\libzlib.dll "$(BIT_VAPP_PREFIX)\bin\libzlib.dll"
	copy /Y $(CONFIG)\bin\ca.crt "$(BIT_VAPP_PREFIX)\bin\ca.crt"
	copy /Y $(CONFIG)\bin\ejs.mod "$(BIT_VAPP_PREFIX)\bin\ejs.mod"
	copy /Y $(CONFIG)\bin\pak.mod "$(BIT_VAPP_PREFIX)\bin\pak.mod"
	cd .

#
#   start
#
start: $(DEPS_64)
#  Omit build script start

#
#   install
#
DEPS_65 = $(DEPS_65) stop
DEPS_65 = $(DEPS_65) installBinary
DEPS_65 = $(DEPS_65) start

install: $(DEPS_65)
#  Omit build script install

#
#   uninstall
#
DEPS_66 = $(DEPS_66) stop

uninstall: $(DEPS_66)
	cd .
	if exist "$(BIT_VAPP_PREFIX)" rd /Q /S "$(BIT_VAPP_PREFIX)"
	if exist "$(BIT_VAPP_PREFIX)\bin" rd /Q "$(BIT_VAPP_PREFIX)\bin"
	if exist "$(BIT_VAPP_PREFIX)\man" rd /Q "$(BIT_VAPP_PREFIX)\man"
	if exist "$(BIT_VAPP_PREFIX)\latest" del /Q "$(BIT_VAPP_PREFIX)\latest"
	if exist "$(BIT_VAPP_PREFIX)" rd /Q "$(BIT_VAPP_PREFIX)"
	cd .

