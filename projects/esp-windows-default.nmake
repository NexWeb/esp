#
#   esp-windows-default.nmake -- Makefile to build Embedthis ESP for windows
#

NAME                  = esp
VERSION               = 5.2.1

OS                    = windows
PA                    = $(PROCESSOR_ARCHITECTURE)
!IF "$(PROFILE)" == ""
PROFILE               = default
!ENDIF


!IF "$(PA)" == "AMD64"
ARCH                  = x64
ENTRY                 = _DllMainCRTStartup
!ELSE
ARCH                  = x86
ENTRY                 = _DllMainCRTStartup@12
!ENDIF

!IF "$(CONFIG)" == ""
CONFIG                = $(OS)-$(ARCH)-$(PROFILE)
!ENDIF

!IF "$(BUILD)" == ""
BUILD                 = build\$(CONFIG)
!ENDIF

LBIN                  = $(BUILD)\bin

!IF "$(ME_COM_APPWEB)" == ""
ME_COM_APPWEB         = 1
!ENDIF
!IF "$(ME_COM_CGI)" == ""
ME_COM_CGI            = 0
!ENDIF
!IF "$(ME_COM_DIR)" == ""
ME_COM_DIR            = 0
!ENDIF
!IF "$(ME_COM_EST)" == ""
ME_COM_EST            = 1
!ENDIF
!IF "$(ME_COM_HTTP)" == ""
ME_COM_HTTP           = 1
!ENDIF
!IF "$(ME_COM_MDB)" == ""
ME_COM_MDB            = 1
!ENDIF
!IF "$(ME_COM_OPENSSL)" == ""
ME_COM_OPENSSL        = 0
!ENDIF
!IF "$(ME_COM_OSDEP)" == ""
ME_COM_OSDEP          = 1
!ENDIF
!IF "$(ME_COM_PCRE)" == ""
ME_COM_PCRE           = 1
!ENDIF
!IF "$(ME_COM_SQLITE)" == ""
ME_COM_SQLITE         = 1
!ENDIF
!IF "$(ME_COM_SSL)" == ""
ME_COM_SSL            = 1
!ENDIF
!IF "$(ME_COM_VXWORKS)" == ""
ME_COM_VXWORKS        = 0
!ENDIF

!IF "$(ME_COM_SSL)" == ""
ME_COM_SSL            = 1
!ENDIF

!IF "$(ME_COM_SSL)" == ""
ME_COM_SSL            = 1
!ENDIF


CC                    = cl
LD                    = link
RC                    = rc
CFLAGS                = -nologo -GR- -W3 -Zi -Od -MDd
DFLAGS                = -D_REENTRANT -D_MT -DME_COM_APPWEB=$(ME_COM_APPWEB) -DME_COM_CGI=$(ME_COM_CGI) -DME_COM_DIR=$(ME_COM_DIR) -DME_COM_EST=$(ME_COM_EST) -DME_COM_HTTP=$(ME_COM_HTTP) -DME_COM_MDB=$(ME_COM_MDB) -DME_COM_OPENSSL=$(ME_COM_OPENSSL) -DME_COM_OSDEP=$(ME_COM_OSDEP) -DME_COM_PCRE=$(ME_COM_PCRE) -DME_COM_SQLITE=$(ME_COM_SQLITE) -DME_COM_SSL=$(ME_COM_SSL) -DME_COM_VXWORKS=$(ME_COM_VXWORKS) 
IFLAGS                = -Ibuild\$(CONFIG)\inc
LDFLAGS               = -nologo -nodefaultlib -incremental:no -debug -machine:$(ARCH)
LIBPATHS              = "-libpath:$(BUILD)\bin"
LIBS                  = ws2_32.lib advapi32.lib user32.lib kernel32.lib oldnames.lib msvcrt.lib shell32.lib

ME_ROOT_PREFIX        = C:
ME_BASE_PREFIX        = $(ME_ROOT_PREFIX)\Program Files
ME_APP_PREFIX         = $(ME_BASE_PREFIX)\Embedthis ESP
ME_VAPP_PREFIX        = $(ME_APP_PREFIX)
ME_DATA_PREFIX        = $(ME_VAPP_PREFIX)
ME_STATE_PREFIX       = $(ME_VAPP_PREFIX)
ME_BIN_PREFIX         = $(ME_VAPP_PREFIX)\bin
ME_INC_PREFIX         = $(ME_VAPP_PREFIX)\inc
ME_LIB_PREFIX         = $(ME_VAPP_PREFIX)\lib
ME_MAN_PREFIX         = $(ME_VAPP_PREFIX)\man
ME_ETC_PREFIX         = $(ME_VAPP_PREFIX)
ME_WEB_PREFIX         = $(ME_VAPP_PREFIX)\web
ME_LOG_PREFIX         = $(ME_VAPP_PREFIX)\log
ME_SPOOL_PREFIX       = $(ME_VAPP_PREFIX)\tmp
ME_CACHE_PREFIX       = $(ME_VAPP_PREFIX)\cache
ME_SRC_PREFIX         = $(ME_VAPP_PREFIX)\src


TARGETS               = $(TARGETS) build\$(CONFIG)\esp
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\esp.conf
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\esp.exe
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\ca.crt
!IF "$(ME_COM_EST)" == "1"
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\libest.dll
!ENDIF
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\libmprssl.dll
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\espman.exe

!IFNDEF SHOW
.SILENT:
!ENDIF

all build compile: prep $(TARGETS)

.PHONY: prep

prep:
!IF "$(VSINSTALLDIR)" == ""
	echo "Visual Studio vars not set. Run vcvars.bat."
	exit 255
!ENDIF
!IF "$(ME_APP_PREFIX)" == ""
	echo "ME_APP_PREFIX not set."
	exit 255
!ENDIF
	@if not exist $(BUILD)\bin md $(BUILD)\bin
	@if not exist $(BUILD)\inc md $(BUILD)\inc
	@if not exist $(BUILD)\obj md $(BUILD)\obj
	@if not exist $(BUILD)\inc\me.h copy projects\esp-windows-default-me.h $(BUILD)\inc\me.h

!IF "$(SHOW)" != ""
	@echo ..... [Info] Use "make SHOW=1" to trace executed commands and errors.
LOG =
!ELSE
LOG = >nul
!ENDIF

clean:
	if exist "build\$(CONFIG)\obj\appwebLib.obj" del /Q "build\$(CONFIG)\obj\appwebLib.obj"
	if exist "build\$(CONFIG)\obj\edi.obj" del /Q "build\$(CONFIG)\obj\edi.obj"
	if exist "build\$(CONFIG)\obj\esp.obj" del /Q "build\$(CONFIG)\obj\esp.obj"
	if exist "build\$(CONFIG)\obj\espAbbrev.obj" del /Q "build\$(CONFIG)\obj\espAbbrev.obj"
	if exist "build\$(CONFIG)\obj\espConfig.obj" del /Q "build\$(CONFIG)\obj\espConfig.obj"
	if exist "build\$(CONFIG)\obj\espFramework.obj" del /Q "build\$(CONFIG)\obj\espFramework.obj"
	if exist "build\$(CONFIG)\obj\espHandler.obj" del /Q "build\$(CONFIG)\obj\espHandler.obj"
	if exist "build\$(CONFIG)\obj\espHtml.obj" del /Q "build\$(CONFIG)\obj\espHtml.obj"
	if exist "build\$(CONFIG)\obj\espTemplate.obj" del /Q "build\$(CONFIG)\obj\espTemplate.obj"
	if exist "build\$(CONFIG)\obj\estLib.obj" del /Q "build\$(CONFIG)\obj\estLib.obj"
	if exist "build\$(CONFIG)\obj\httpLib.obj" del /Q "build\$(CONFIG)\obj\httpLib.obj"
	if exist "build\$(CONFIG)\obj\makerom.obj" del /Q "build\$(CONFIG)\obj\makerom.obj"
	if exist "build\$(CONFIG)\obj\manager.obj" del /Q "build\$(CONFIG)\obj\manager.obj"
	if exist "build\$(CONFIG)\obj\mdb.obj" del /Q "build\$(CONFIG)\obj\mdb.obj"
	if exist "build\$(CONFIG)\obj\mprLib.obj" del /Q "build\$(CONFIG)\obj\mprLib.obj"
	if exist "build\$(CONFIG)\obj\mprSsl.obj" del /Q "build\$(CONFIG)\obj\mprSsl.obj"
	if exist "build\$(CONFIG)\obj\pcre.obj" del /Q "build\$(CONFIG)\obj\pcre.obj"
	if exist "build\$(CONFIG)\obj\removeFiles.obj" del /Q "build\$(CONFIG)\obj\removeFiles.obj"
	if exist "build\$(CONFIG)\obj\sdb.obj" del /Q "build\$(CONFIG)\obj\sdb.obj"
	if exist "build\$(CONFIG)\obj\sqlite.obj" del /Q "build\$(CONFIG)\obj\sqlite.obj"
	if exist "build\$(CONFIG)\obj\sqlite3.obj" del /Q "build\$(CONFIG)\obj\sqlite3.obj"
	if exist "build\$(CONFIG)\bin\esp.conf" del /Q "build\$(CONFIG)\bin\esp.conf"
	if exist "build\$(CONFIG)\bin\esp.exe" del /Q "build\$(CONFIG)\bin\esp.exe"
	if exist "build\$(CONFIG)\bin\esp.lib" del /Q "build\$(CONFIG)\bin\esp.lib"
	if exist "build\$(CONFIG)\bin\esp.pdb" del /Q "build\$(CONFIG)\bin\esp.pdb"
	if exist "build\$(CONFIG)\bin\esp.exp" del /Q "build\$(CONFIG)\bin\esp.exp"
	if exist "build\$(CONFIG)\bin\ca.crt" del /Q "build\$(CONFIG)\bin\ca.crt"
	if exist "build\$(CONFIG)\bin\libappweb.dll" del /Q "build\$(CONFIG)\bin\libappweb.dll"
	if exist "build\$(CONFIG)\bin\libappweb.lib" del /Q "build\$(CONFIG)\bin\libappweb.lib"
	if exist "build\$(CONFIG)\bin\libappweb.pdb" del /Q "build\$(CONFIG)\bin\libappweb.pdb"
	if exist "build\$(CONFIG)\bin\libappweb.exp" del /Q "build\$(CONFIG)\bin\libappweb.exp"
	if exist "build\$(CONFIG)\bin\libest.dll" del /Q "build\$(CONFIG)\bin\libest.dll"
	if exist "build\$(CONFIG)\bin\libest.lib" del /Q "build\$(CONFIG)\bin\libest.lib"
	if exist "build\$(CONFIG)\bin\libest.pdb" del /Q "build\$(CONFIG)\bin\libest.pdb"
	if exist "build\$(CONFIG)\bin\libest.exp" del /Q "build\$(CONFIG)\bin\libest.exp"
	if exist "build\$(CONFIG)\bin\libhttp.dll" del /Q "build\$(CONFIG)\bin\libhttp.dll"
	if exist "build\$(CONFIG)\bin\libhttp.lib" del /Q "build\$(CONFIG)\bin\libhttp.lib"
	if exist "build\$(CONFIG)\bin\libhttp.pdb" del /Q "build\$(CONFIG)\bin\libhttp.pdb"
	if exist "build\$(CONFIG)\bin\libhttp.exp" del /Q "build\$(CONFIG)\bin\libhttp.exp"
	if exist "build\$(CONFIG)\bin\libmod_esp.dll" del /Q "build\$(CONFIG)\bin\libmod_esp.dll"
	if exist "build\$(CONFIG)\bin\libmod_esp.lib" del /Q "build\$(CONFIG)\bin\libmod_esp.lib"
	if exist "build\$(CONFIG)\bin\libmod_esp.pdb" del /Q "build\$(CONFIG)\bin\libmod_esp.pdb"
	if exist "build\$(CONFIG)\bin\libmod_esp.exp" del /Q "build\$(CONFIG)\bin\libmod_esp.exp"
	if exist "build\$(CONFIG)\bin\libmpr.dll" del /Q "build\$(CONFIG)\bin\libmpr.dll"
	if exist "build\$(CONFIG)\bin\libmpr.lib" del /Q "build\$(CONFIG)\bin\libmpr.lib"
	if exist "build\$(CONFIG)\bin\libmpr.pdb" del /Q "build\$(CONFIG)\bin\libmpr.pdb"
	if exist "build\$(CONFIG)\bin\libmpr.exp" del /Q "build\$(CONFIG)\bin\libmpr.exp"
	if exist "build\$(CONFIG)\bin\libmprssl.dll" del /Q "build\$(CONFIG)\bin\libmprssl.dll"
	if exist "build\$(CONFIG)\bin\libmprssl.lib" del /Q "build\$(CONFIG)\bin\libmprssl.lib"
	if exist "build\$(CONFIG)\bin\libmprssl.pdb" del /Q "build\$(CONFIG)\bin\libmprssl.pdb"
	if exist "build\$(CONFIG)\bin\libmprssl.exp" del /Q "build\$(CONFIG)\bin\libmprssl.exp"
	if exist "build\$(CONFIG)\bin\libpcre.dll" del /Q "build\$(CONFIG)\bin\libpcre.dll"
	if exist "build\$(CONFIG)\bin\libpcre.lib" del /Q "build\$(CONFIG)\bin\libpcre.lib"
	if exist "build\$(CONFIG)\bin\libpcre.pdb" del /Q "build\$(CONFIG)\bin\libpcre.pdb"
	if exist "build\$(CONFIG)\bin\libpcre.exp" del /Q "build\$(CONFIG)\bin\libpcre.exp"
	if exist "build\$(CONFIG)\bin\libsql.dll" del /Q "build\$(CONFIG)\bin\libsql.dll"
	if exist "build\$(CONFIG)\bin\libsql.lib" del /Q "build\$(CONFIG)\bin\libsql.lib"
	if exist "build\$(CONFIG)\bin\libsql.pdb" del /Q "build\$(CONFIG)\bin\libsql.pdb"
	if exist "build\$(CONFIG)\bin\libsql.exp" del /Q "build\$(CONFIG)\bin\libsql.exp"
	if exist "build\$(CONFIG)\bin\espman.exe" del /Q "build\$(CONFIG)\bin\espman.exe"
	if exist "build\$(CONFIG)\bin\espman.lib" del /Q "build\$(CONFIG)\bin\espman.lib"
	if exist "build\$(CONFIG)\bin\espman.pdb" del /Q "build\$(CONFIG)\bin\espman.pdb"
	if exist "build\$(CONFIG)\bin\espman.exp" del /Q "build\$(CONFIG)\bin\espman.exp"

#
#   esp-paks
#
DEPS_1 = $(DEPS_1) src\paks\esp-html-mvc\client\assets\favicon.ico
DEPS_1 = $(DEPS_1) src\paks\esp-html-mvc\client\css\all.css
DEPS_1 = $(DEPS_1) src\paks\esp-html-mvc\client\css\all.less
DEPS_1 = $(DEPS_1) src\paks\esp-html-mvc\client\index.esp
DEPS_1 = $(DEPS_1) src\paks\esp-html-mvc\css\app.less
DEPS_1 = $(DEPS_1) src\paks\esp-html-mvc\css\theme.less
DEPS_1 = $(DEPS_1) src\paks\esp-html-mvc\generate\appweb.conf
DEPS_1 = $(DEPS_1) src\paks\esp-html-mvc\generate\controller.c
DEPS_1 = $(DEPS_1) src\paks\esp-html-mvc\generate\controllerSingleton.c
DEPS_1 = $(DEPS_1) src\paks\esp-html-mvc\generate\edit.esp
DEPS_1 = $(DEPS_1) src\paks\esp-html-mvc\generate\list.esp
DEPS_1 = $(DEPS_1) src\paks\esp-html-mvc\layouts\default.esp
DEPS_1 = $(DEPS_1) src\paks\esp-html-mvc\LICENSE.md
DEPS_1 = $(DEPS_1) src\paks\esp-html-mvc\package.json
DEPS_1 = $(DEPS_1) src\paks\esp-html-mvc\README.md
DEPS_1 = $(DEPS_1) src\paks\esp-mvc\generate\appweb.conf
DEPS_1 = $(DEPS_1) src\paks\esp-mvc\generate\controller.c
DEPS_1 = $(DEPS_1) src\paks\esp-mvc\generate\migration.c
DEPS_1 = $(DEPS_1) src\paks\esp-mvc\generate\src\app.c
DEPS_1 = $(DEPS_1) src\paks\esp-mvc\LICENSE.md
DEPS_1 = $(DEPS_1) src\paks\esp-mvc\package.json
DEPS_1 = $(DEPS_1) src\paks\esp-mvc\README.md
DEPS_1 = $(DEPS_1) src\paks\esp-server\generate\appweb.conf
DEPS_1 = $(DEPS_1) src\paks\esp-server\LICENSE.md
DEPS_1 = $(DEPS_1) src\paks\esp-server\package.json
DEPS_1 = $(DEPS_1) src\paks\esp-server\README.md

build\$(CONFIG)\esp: $(DEPS_1)
	cd src\paks
	@echo ..... [Copy] src\paks\esp-*
	if not exist "..\..\build\$(CONFIG)\esp\esp-html-mvc\5.2.0" md "..\..\build\$(CONFIG)\esp\esp-html-mvc\5.2.0"
	if not exist "..\..\build\$(CONFIG)\esp\esp-html-mvc\5.2.0\client" md "..\..\build\$(CONFIG)\esp\esp-html-mvc\5.2.0\client"
	if not exist "..\..\build\$(CONFIG)\esp\esp-html-mvc\5.2.0\client\assets" md "..\..\build\$(CONFIG)\esp\esp-html-mvc\5.2.0\client\assets"
	copy /Y /B esp-html-mvc\client\assets\favicon.ico+modified ..\..\build\$(CONFIG)\esp\esp-html-mvc\5.2.0\client\assets\favicon.ico $(LOG)
	if not exist "..\..\build\$(CONFIG)\esp\esp-html-mvc\5.2.0\client\css" md "..\..\build\$(CONFIG)\esp\esp-html-mvc\5.2.0\client\css"
	copy /Y /B esp-html-mvc\client\css\all.css+modified ..\..\build\$(CONFIG)\esp\esp-html-mvc\5.2.0\client\css\all.css $(LOG)
	copy /Y /B esp-html-mvc\client\css\all.less+modified ..\..\build\$(CONFIG)\esp\esp-html-mvc\5.2.0\client\css\all.less $(LOG)
	copy /Y /B esp-html-mvc\client\index.esp+modified ..\..\build\$(CONFIG)\esp\esp-html-mvc\5.2.0\client\index.esp $(LOG)
	if not exist "..\..\build\$(CONFIG)\esp\esp-html-mvc\5.2.0\css" md "..\..\build\$(CONFIG)\esp\esp-html-mvc\5.2.0\css"
	copy /Y /B esp-html-mvc\css\app.less+modified ..\..\build\$(CONFIG)\esp\esp-html-mvc\5.2.0\css\app.less $(LOG)
	copy /Y /B esp-html-mvc\css\theme.less+modified ..\..\build\$(CONFIG)\esp\esp-html-mvc\5.2.0\css\theme.less $(LOG)
	if not exist "..\..\build\$(CONFIG)\esp\esp-html-mvc\5.2.0\generate" md "..\..\build\$(CONFIG)\esp\esp-html-mvc\5.2.0\generate"
	copy /Y /B esp-html-mvc\generate\appweb.conf+modified ..\..\build\$(CONFIG)\esp\esp-html-mvc\5.2.0\generate\appweb.conf $(LOG)
	copy /Y /B esp-html-mvc\generate\controller.c+modified ..\..\build\$(CONFIG)\esp\esp-html-mvc\5.2.0\generate\controller.c $(LOG)
	copy /Y /B esp-html-mvc\generate\controllerSingleton.c+modified ..\..\build\$(CONFIG)\esp\esp-html-mvc\5.2.0\generate\controllerSingleton.c $(LOG)
	copy /Y /B esp-html-mvc\generate\edit.esp+modified ..\..\build\$(CONFIG)\esp\esp-html-mvc\5.2.0\generate\edit.esp $(LOG)
	copy /Y /B esp-html-mvc\generate\list.esp+modified ..\..\build\$(CONFIG)\esp\esp-html-mvc\5.2.0\generate\list.esp $(LOG)
	if not exist "..\..\build\$(CONFIG)\esp\esp-html-mvc\5.2.0\layouts" md "..\..\build\$(CONFIG)\esp\esp-html-mvc\5.2.0\layouts"
	copy /Y /B esp-html-mvc\layouts\default.esp+modified ..\..\build\$(CONFIG)\esp\esp-html-mvc\5.2.0\layouts\default.esp $(LOG)
	copy /Y /B esp-html-mvc\LICENSE.md+modified ..\..\build\$(CONFIG)\esp\esp-html-mvc\5.2.0\LICENSE.md $(LOG)
	copy /Y /B esp-html-mvc\package.json+modified ..\..\build\$(CONFIG)\esp\esp-html-mvc\5.2.0\package.json $(LOG)
	copy /Y /B esp-html-mvc\README.md+modified ..\..\build\$(CONFIG)\esp\esp-html-mvc\5.2.0\README.md $(LOG)
	if not exist "..\..\build\$(CONFIG)\esp\esp-mvc\5.2.0" md "..\..\build\$(CONFIG)\esp\esp-mvc\5.2.0"
	if not exist "..\..\build\$(CONFIG)\esp\esp-mvc\5.2.0\generate" md "..\..\build\$(CONFIG)\esp\esp-mvc\5.2.0\generate"
	copy /Y /B esp-mvc\generate\appweb.conf+modified ..\..\build\$(CONFIG)\esp\esp-mvc\5.2.0\generate\appweb.conf $(LOG)
	copy /Y /B esp-mvc\generate\controller.c+modified ..\..\build\$(CONFIG)\esp\esp-mvc\5.2.0\generate\controller.c $(LOG)
	copy /Y /B esp-mvc\generate\migration.c+modified ..\..\build\$(CONFIG)\esp\esp-mvc\5.2.0\generate\migration.c $(LOG)
	if not exist "..\..\build\$(CONFIG)\esp\esp-mvc\5.2.0\generate\src" md "..\..\build\$(CONFIG)\esp\esp-mvc\5.2.0\generate\src"
	copy /Y /B esp-mvc\generate\src\app.c+modified ..\..\build\$(CONFIG)\esp\esp-mvc\5.2.0\generate\src\app.c $(LOG)
	copy /Y /B esp-mvc\LICENSE.md+modified ..\..\build\$(CONFIG)\esp\esp-mvc\5.2.0\LICENSE.md $(LOG)
	copy /Y /B esp-mvc\package.json+modified ..\..\build\$(CONFIG)\esp\esp-mvc\5.2.0\package.json $(LOG)
	copy /Y /B esp-mvc\README.md+modified ..\..\build\$(CONFIG)\esp\esp-mvc\5.2.0\README.md $(LOG)
	if not exist "..\..\build\$(CONFIG)\esp\esp-server\5.2.0" md "..\..\build\$(CONFIG)\esp\esp-server\5.2.0"
	if not exist "..\..\build\$(CONFIG)\esp\esp-server\5.2.0\generate" md "..\..\build\$(CONFIG)\esp\esp-server\5.2.0\generate"
	copy /Y /B esp-server\generate\appweb.conf+modified ..\..\build\$(CONFIG)\esp\esp-server\5.2.0\generate\appweb.conf $(LOG)
	copy /Y /B esp-server\LICENSE.md+modified ..\..\build\$(CONFIG)\esp\esp-server\5.2.0\LICENSE.md $(LOG)
	copy /Y /B esp-server\package.json+modified ..\..\build\$(CONFIG)\esp\esp-server\5.2.0\package.json $(LOG)
	copy /Y /B esp-server\README.md+modified ..\..\build\$(CONFIG)\esp\esp-server\5.2.0\README.md $(LOG)
	cd ..\..

#
#   esp.conf
#
DEPS_2 = $(DEPS_2) src\esp.conf

build\$(CONFIG)\bin\esp.conf: $(DEPS_2)
	@echo ..... [Copy] build\$(CONFIG)\bin\esp.conf
	if not exist "build\$(CONFIG)\bin" md "build\$(CONFIG)\bin"
	copy /Y /B src\esp.conf+modified build\$(CONFIG)\bin\esp.conf $(LOG)

#
#   edi.h
#
DEPS_3 = $(DEPS_3) src\edi.h

build\$(CONFIG)\inc\edi.h: $(DEPS_3)
	@echo ..... [Copy] build\$(CONFIG)\inc\edi.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\edi.h+modified build\$(CONFIG)\inc\edi.h $(LOG)

#
#   esp.h
#
DEPS_4 = $(DEPS_4) src\esp.h

build\$(CONFIG)\inc\esp.h: $(DEPS_4)
	@echo ..... [Copy] build\$(CONFIG)\inc\esp.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\esp.h+modified build\$(CONFIG)\inc\esp.h $(LOG)

#
#   mdb.h
#
DEPS_5 = $(DEPS_5) src\mdb.h

build\$(CONFIG)\inc\mdb.h: $(DEPS_5)
	@echo ..... [Copy] build\$(CONFIG)\inc\mdb.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\mdb.h+modified build\$(CONFIG)\inc\mdb.h $(LOG)

#
#   me.h
#

build\$(CONFIG)\inc\me.h: $(DEPS_6)

#
#   osdep.h
#
DEPS_7 = $(DEPS_7) src\paks\osdep\osdep.h
DEPS_7 = $(DEPS_7) build\$(CONFIG)\inc\me.h

build\$(CONFIG)\inc\osdep.h: $(DEPS_7)
	@echo ..... [Copy] build\$(CONFIG)\inc\osdep.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\paks\osdep\osdep.h+modified build\$(CONFIG)\inc\osdep.h $(LOG)

#
#   mpr.h
#
DEPS_8 = $(DEPS_8) src\paks\mpr\mpr.h
DEPS_8 = $(DEPS_8) build\$(CONFIG)\inc\me.h
DEPS_8 = $(DEPS_8) build\$(CONFIG)\inc\osdep.h

build\$(CONFIG)\inc\mpr.h: $(DEPS_8)
	@echo ..... [Copy] build\$(CONFIG)\inc\mpr.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\paks\mpr\mpr.h+modified build\$(CONFIG)\inc\mpr.h $(LOG)

#
#   mpr.h
#

src\paks\mpr\mpr.h: $(DEPS_9)

#
#   mprLib.obj
#
DEPS_10 = $(DEPS_10) src\paks\mpr\mpr.h

build\$(CONFIG)\obj\mprLib.obj: \
    src\paks\mpr\mprLib.c $(DEPS_10)
	@echo .. [Compile] build\$(CONFIG)\obj\mprLib.obj
	"$(CC)" -c -Fo$(BUILD)\obj\mprLib.obj -Fd$(BUILD)\obj\mprLib.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\paks\mpr\mprLib.c $(LOG)

#
#   libmpr
#
DEPS_11 = $(DEPS_11) build\$(CONFIG)\inc\osdep.h
DEPS_11 = $(DEPS_11) build\$(CONFIG)\inc\mpr.h
DEPS_11 = $(DEPS_11) build\$(CONFIG)\obj\mprLib.obj

build\$(CONFIG)\bin\libmpr.dll: $(DEPS_11)
	@echo ..... [Link] build\$(CONFIG)\bin\libmpr.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libmpr.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\mprLib.obj" $(LIBS)  $(LOG)

#
#   pcre.h
#
DEPS_12 = $(DEPS_12) src\paks\pcre\pcre.h

build\$(CONFIG)\inc\pcre.h: $(DEPS_12)
	@echo ..... [Copy] build\$(CONFIG)\inc\pcre.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\paks\pcre\pcre.h+modified build\$(CONFIG)\inc\pcre.h $(LOG)

#
#   pcre.h
#

src\paks\pcre\pcre.h: $(DEPS_13)

#
#   pcre.obj
#
DEPS_14 = $(DEPS_14) build\$(CONFIG)\inc\me.h
DEPS_14 = $(DEPS_14) src\paks\pcre\pcre.h

build\$(CONFIG)\obj\pcre.obj: \
    src\paks\pcre\pcre.c $(DEPS_14)
	@echo .. [Compile] build\$(CONFIG)\obj\pcre.obj
	"$(CC)" -c -Fo$(BUILD)\obj\pcre.obj -Fd$(BUILD)\obj\pcre.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\paks\pcre\pcre.c $(LOG)

!IF "$(ME_COM_PCRE)" == "1"
#
#   libpcre
#
DEPS_15 = $(DEPS_15) build\$(CONFIG)\inc\pcre.h
DEPS_15 = $(DEPS_15) build\$(CONFIG)\obj\pcre.obj

build\$(CONFIG)\bin\libpcre.dll: $(DEPS_15)
	@echo ..... [Link] build\$(CONFIG)\bin\libpcre.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libpcre.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\pcre.obj" $(LIBS)  $(LOG)
!ENDIF

#
#   http.h
#
DEPS_16 = $(DEPS_16) src\paks\http\http.h
DEPS_16 = $(DEPS_16) build\$(CONFIG)\inc\mpr.h

build\$(CONFIG)\inc\http.h: $(DEPS_16)
	@echo ..... [Copy] build\$(CONFIG)\inc\http.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\paks\http\http.h+modified build\$(CONFIG)\inc\http.h $(LOG)

#
#   http.h
#

src\paks\http\http.h: $(DEPS_17)

#
#   httpLib.obj
#
DEPS_18 = $(DEPS_18) src\paks\http\http.h

build\$(CONFIG)\obj\httpLib.obj: \
    src\paks\http\httpLib.c $(DEPS_18)
	@echo .. [Compile] build\$(CONFIG)\obj\httpLib.obj
	"$(CC)" -c -Fo$(BUILD)\obj\httpLib.obj -Fd$(BUILD)\obj\httpLib.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\paks\http\httpLib.c $(LOG)

!IF "$(ME_COM_HTTP)" == "1"
#
#   libhttp
#
DEPS_19 = $(DEPS_19) build\$(CONFIG)\bin\libmpr.dll
!IF "$(ME_COM_PCRE)" == "1"
DEPS_19 = $(DEPS_19) build\$(CONFIG)\bin\libpcre.dll
!ENDIF
DEPS_19 = $(DEPS_19) build\$(CONFIG)\inc\http.h
DEPS_19 = $(DEPS_19) build\$(CONFIG)\obj\httpLib.obj

LIBS_19 = $(LIBS_19) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_19 = $(LIBS_19) libpcre.lib
!ENDIF

build\$(CONFIG)\bin\libhttp.dll: $(DEPS_19)
	@echo ..... [Link] build\$(CONFIG)\bin\libhttp.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libhttp.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\httpLib.obj" $(LIBPATHS_19) $(LIBS_19) $(LIBS_19) $(LIBS)  $(LOG)
!ENDIF

#
#   appweb.h
#
DEPS_20 = $(DEPS_20) src\paks\appweb\appweb.h

build\$(CONFIG)\inc\appweb.h: $(DEPS_20)
	@echo ..... [Copy] build\$(CONFIG)\inc\appweb.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\paks\appweb\appweb.h+modified build\$(CONFIG)\inc\appweb.h $(LOG)

#
#   appweb.h
#

src\paks\appweb\appweb.h: $(DEPS_21)

#
#   appwebLib.obj
#
DEPS_22 = $(DEPS_22) src\paks\appweb\appweb.h
DEPS_22 = $(DEPS_22) build\$(CONFIG)\inc\pcre.h
DEPS_22 = $(DEPS_22) build\$(CONFIG)\inc\mpr.h

build\$(CONFIG)\obj\appwebLib.obj: \
    src\paks\appweb\appwebLib.c $(DEPS_22)
	@echo .. [Compile] build\$(CONFIG)\obj\appwebLib.obj
	"$(CC)" -c -Fo$(BUILD)\obj\appwebLib.obj -Fd$(BUILD)\obj\appwebLib.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\paks\appweb\appwebLib.c $(LOG)

!IF "$(ME_COM_APPWEB)" == "1"
#
#   libappweb
#
!IF "$(ME_COM_HTTP)" == "1"
DEPS_23 = $(DEPS_23) build\$(CONFIG)\bin\libhttp.dll
!ENDIF
!IF "$(ME_COM_PCRE)" == "1"
DEPS_23 = $(DEPS_23) build\$(CONFIG)\bin\libpcre.dll
!ENDIF
DEPS_23 = $(DEPS_23) build\$(CONFIG)\bin\libmpr.dll
DEPS_23 = $(DEPS_23) build\$(CONFIG)\inc\appweb.h
DEPS_23 = $(DEPS_23) build\$(CONFIG)\obj\appwebLib.obj

!IF "$(ME_COM_HTTP)" == "1"
LIBS_23 = $(LIBS_23) libhttp.lib
!ENDIF
LIBS_23 = $(LIBS_23) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_23 = $(LIBS_23) libpcre.lib
!ENDIF

build\$(CONFIG)\bin\libappweb.dll: $(DEPS_23)
	@echo ..... [Link] build\$(CONFIG)\bin\libappweb.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libappweb.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\appwebLib.obj" $(LIBPATHS_23) $(LIBS_23) $(LIBS_23) $(LIBS)  $(LOG)
!ENDIF

#
#   sqlite3.h
#
DEPS_24 = $(DEPS_24) src\paks\sqlite\sqlite3.h

build\$(CONFIG)\inc\sqlite3.h: $(DEPS_24)
	@echo ..... [Copy] build\$(CONFIG)\inc\sqlite3.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\paks\sqlite\sqlite3.h+modified build\$(CONFIG)\inc\sqlite3.h $(LOG)

#
#   sqlite3.h
#

src\paks\sqlite\sqlite3.h: $(DEPS_25)

#
#   sqlite3.obj
#
DEPS_26 = $(DEPS_26) build\$(CONFIG)\inc\me.h
DEPS_26 = $(DEPS_26) src\paks\sqlite\sqlite3.h

build\$(CONFIG)\obj\sqlite3.obj: \
    src\paks\sqlite\sqlite3.c $(DEPS_26)
	@echo .. [Compile] build\$(CONFIG)\obj\sqlite3.obj
	"$(CC)" -c -Fo$(BUILD)\obj\sqlite3.obj -Fd$(BUILD)\obj\sqlite3.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\paks\sqlite\sqlite3.c $(LOG)

!IF "$(ME_COM_SQLITE)" == "1"
#
#   libsql
#
DEPS_27 = $(DEPS_27) build\$(CONFIG)\inc\sqlite3.h
DEPS_27 = $(DEPS_27) build\$(CONFIG)\obj\sqlite3.obj

build\$(CONFIG)\bin\libsql.dll: $(DEPS_27)
	@echo ..... [Link] build\$(CONFIG)\bin\libsql.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libsql.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\sqlite3.obj" $(LIBS)  $(LOG)
!ENDIF

#
#   edi.h
#

src\edi.h: $(DEPS_28)

#
#   edi.obj
#
DEPS_29 = $(DEPS_29) src\edi.h
DEPS_29 = $(DEPS_29) build\$(CONFIG)\inc\pcre.h

build\$(CONFIG)\obj\edi.obj: \
    src\edi.c $(DEPS_29)
	@echo .. [Compile] build\$(CONFIG)\obj\edi.obj
	"$(CC)" -c -Fo$(BUILD)\obj\edi.obj -Fd$(BUILD)\obj\edi.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\edi.c $(LOG)

#
#   esp.h
#

src\esp.h: $(DEPS_30)

#
#   espAbbrev.obj
#
DEPS_31 = $(DEPS_31) src\esp.h

build\$(CONFIG)\obj\espAbbrev.obj: \
    src\espAbbrev.c $(DEPS_31)
	@echo .. [Compile] build\$(CONFIG)\obj\espAbbrev.obj
	"$(CC)" -c -Fo$(BUILD)\obj\espAbbrev.obj -Fd$(BUILD)\obj\espAbbrev.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\espAbbrev.c $(LOG)

#
#   espConfig.obj
#
DEPS_32 = $(DEPS_32) src\esp.h

build\$(CONFIG)\obj\espConfig.obj: \
    src\espConfig.c $(DEPS_32)
	@echo .. [Compile] build\$(CONFIG)\obj\espConfig.obj
	"$(CC)" -c -Fo$(BUILD)\obj\espConfig.obj -Fd$(BUILD)\obj\espConfig.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\espConfig.c $(LOG)

#
#   espFramework.obj
#
DEPS_33 = $(DEPS_33) src\esp.h

build\$(CONFIG)\obj\espFramework.obj: \
    src\espFramework.c $(DEPS_33)
	@echo .. [Compile] build\$(CONFIG)\obj\espFramework.obj
	"$(CC)" -c -Fo$(BUILD)\obj\espFramework.obj -Fd$(BUILD)\obj\espFramework.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\espFramework.c $(LOG)

#
#   espHandler.obj
#
DEPS_34 = $(DEPS_34) src\esp.h

build\$(CONFIG)\obj\espHandler.obj: \
    src\espHandler.c $(DEPS_34)
	@echo .. [Compile] build\$(CONFIG)\obj\espHandler.obj
	"$(CC)" -c -Fo$(BUILD)\obj\espHandler.obj -Fd$(BUILD)\obj\espHandler.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\espHandler.c $(LOG)

#
#   espHtml.obj
#
DEPS_35 = $(DEPS_35) src\esp.h
DEPS_35 = $(DEPS_35) src\edi.h

build\$(CONFIG)\obj\espHtml.obj: \
    src\espHtml.c $(DEPS_35)
	@echo .. [Compile] build\$(CONFIG)\obj\espHtml.obj
	"$(CC)" -c -Fo$(BUILD)\obj\espHtml.obj -Fd$(BUILD)\obj\espHtml.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\espHtml.c $(LOG)

#
#   espTemplate.obj
#
DEPS_36 = $(DEPS_36) src\esp.h

build\$(CONFIG)\obj\espTemplate.obj: \
    src\espTemplate.c $(DEPS_36)
	@echo .. [Compile] build\$(CONFIG)\obj\espTemplate.obj
	"$(CC)" -c -Fo$(BUILD)\obj\espTemplate.obj -Fd$(BUILD)\obj\espTemplate.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\espTemplate.c $(LOG)

#
#   mdb.h
#

src\mdb.h: $(DEPS_37)

#
#   mdb.obj
#
DEPS_38 = $(DEPS_38) build\$(CONFIG)\inc\http.h
DEPS_38 = $(DEPS_38) src\edi.h
DEPS_38 = $(DEPS_38) src\mdb.h
DEPS_38 = $(DEPS_38) build\$(CONFIG)\inc\pcre.h

build\$(CONFIG)\obj\mdb.obj: \
    src\mdb.c $(DEPS_38)
	@echo .. [Compile] build\$(CONFIG)\obj\mdb.obj
	"$(CC)" -c -Fo$(BUILD)\obj\mdb.obj -Fd$(BUILD)\obj\mdb.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\mdb.c $(LOG)

#
#   sdb.obj
#
DEPS_39 = $(DEPS_39) build\$(CONFIG)\inc\http.h
DEPS_39 = $(DEPS_39) src\edi.h

build\$(CONFIG)\obj\sdb.obj: \
    src\sdb.c $(DEPS_39)
	@echo .. [Compile] build\$(CONFIG)\obj\sdb.obj
	"$(CC)" -c -Fo$(BUILD)\obj\sdb.obj -Fd$(BUILD)\obj\sdb.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\sdb.c $(LOG)

#
#   libmod_esp
#
!IF "$(ME_COM_APPWEB)" == "1"
DEPS_40 = $(DEPS_40) build\$(CONFIG)\bin\libappweb.dll
!ENDIF
!IF "$(ME_COM_SQLITE)" == "1"
DEPS_40 = $(DEPS_40) build\$(CONFIG)\bin\libsql.dll
!ENDIF
DEPS_40 = $(DEPS_40) build\$(CONFIG)\inc\edi.h
DEPS_40 = $(DEPS_40) build\$(CONFIG)\inc\esp.h
DEPS_40 = $(DEPS_40) build\$(CONFIG)\inc\mdb.h
DEPS_40 = $(DEPS_40) build\$(CONFIG)\obj\edi.obj
DEPS_40 = $(DEPS_40) build\$(CONFIG)\obj\espAbbrev.obj
DEPS_40 = $(DEPS_40) build\$(CONFIG)\obj\espConfig.obj
DEPS_40 = $(DEPS_40) build\$(CONFIG)\obj\espFramework.obj
DEPS_40 = $(DEPS_40) build\$(CONFIG)\obj\espHandler.obj
DEPS_40 = $(DEPS_40) build\$(CONFIG)\obj\espHtml.obj
DEPS_40 = $(DEPS_40) build\$(CONFIG)\obj\espTemplate.obj
DEPS_40 = $(DEPS_40) build\$(CONFIG)\obj\mdb.obj
DEPS_40 = $(DEPS_40) build\$(CONFIG)\obj\sdb.obj

!IF "$(ME_COM_APPWEB)" == "1"
LIBS_40 = $(LIBS_40) libappweb.lib
!ENDIF
!IF "$(ME_COM_HTTP)" == "1"
LIBS_40 = $(LIBS_40) libhttp.lib
!ENDIF
LIBS_40 = $(LIBS_40) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_40 = $(LIBS_40) libpcre.lib
!ENDIF
!IF "$(ME_COM_SQLITE)" == "1"
LIBS_40 = $(LIBS_40) libsql.lib
!ENDIF

build\$(CONFIG)\bin\libmod_esp.dll: $(DEPS_40)
	@echo ..... [Link] build\$(CONFIG)\bin\libmod_esp.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libmod_esp.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\edi.obj" "$(BUILD)\obj\espAbbrev.obj" "$(BUILD)\obj\espConfig.obj" "$(BUILD)\obj\espFramework.obj" "$(BUILD)\obj\espHandler.obj" "$(BUILD)\obj\espHtml.obj" "$(BUILD)\obj\espTemplate.obj" "$(BUILD)\obj\mdb.obj" "$(BUILD)\obj\sdb.obj" $(LIBPATHS_40) $(LIBS_40) $(LIBS_40) $(LIBS)  $(LOG)

#
#   esp.obj
#
DEPS_41 = $(DEPS_41) src\esp.h

build\$(CONFIG)\obj\esp.obj: \
    src\esp.c $(DEPS_41)
	@echo .. [Compile] build\$(CONFIG)\obj\esp.obj
	"$(CC)" -c -Fo$(BUILD)\obj\esp.obj -Fd$(BUILD)\obj\esp.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\esp.c $(LOG)

#
#   espcmd
#
!IF "$(ME_COM_APPWEB)" == "1"
DEPS_42 = $(DEPS_42) build\$(CONFIG)\bin\libappweb.dll
!ENDIF
!IF "$(ME_COM_SQLITE)" == "1"
DEPS_42 = $(DEPS_42) build\$(CONFIG)\bin\libsql.dll
!ENDIF
DEPS_42 = $(DEPS_42) build\$(CONFIG)\bin\libmod_esp.dll
DEPS_42 = $(DEPS_42) build\$(CONFIG)\obj\esp.obj

!IF "$(ME_COM_APPWEB)" == "1"
LIBS_42 = $(LIBS_42) libappweb.lib
!ENDIF
!IF "$(ME_COM_HTTP)" == "1"
LIBS_42 = $(LIBS_42) libhttp.lib
!ENDIF
LIBS_42 = $(LIBS_42) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_42 = $(LIBS_42) libpcre.lib
!ENDIF
!IF "$(ME_COM_SQLITE)" == "1"
LIBS_42 = $(LIBS_42) libsql.lib
!ENDIF
LIBS_42 = $(LIBS_42) libmod_esp.lib

build\$(CONFIG)\bin\esp.exe: $(DEPS_42)
	@echo ..... [Link] build\$(CONFIG)\bin\esp.exe
	"$(LD)" -nologo -out:$(BUILD)\bin\esp.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\esp.obj" $(LIBPATHS_42) $(LIBS_42) $(LIBS_42) $(LIBS)  $(LOG)

#
#   http-ca-crt
#
DEPS_43 = $(DEPS_43) src\paks\http\ca.crt

build\$(CONFIG)\bin\ca.crt: $(DEPS_43)
	@echo ..... [Copy] build\$(CONFIG)\bin\ca.crt
	if not exist "build\$(CONFIG)\bin" md "build\$(CONFIG)\bin"
	copy /Y /B src\paks\http\ca.crt+modified build\$(CONFIG)\bin\ca.crt $(LOG)

#
#   est.h
#
DEPS_44 = $(DEPS_44) src\paks\est\est.h

build\$(CONFIG)\inc\est.h: $(DEPS_44)
	@echo ..... [Copy] build\$(CONFIG)\inc\est.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\paks\est\est.h+modified build\$(CONFIG)\inc\est.h $(LOG)

#
#   est.h
#

src\paks\est\est.h: $(DEPS_45)

#
#   estLib.obj
#
DEPS_46 = $(DEPS_46) src\paks\est\est.h

build\$(CONFIG)\obj\estLib.obj: \
    src\paks\est\estLib.c $(DEPS_46)
	@echo .. [Compile] build\$(CONFIG)\obj\estLib.obj
	"$(CC)" -c -Fo$(BUILD)\obj\estLib.obj -Fd$(BUILD)\obj\estLib.pdb -nologo -GR- -Zi -Od -MDd $(DFLAGS) $(IFLAGS) src\paks\est\estLib.c $(LOG)

!IF "$(ME_COM_EST)" == "1"
#
#   libest
#
DEPS_47 = $(DEPS_47) build\$(CONFIG)\inc\osdep.h
DEPS_47 = $(DEPS_47) build\$(CONFIG)\inc\est.h
DEPS_47 = $(DEPS_47) build\$(CONFIG)\obj\estLib.obj

build\$(CONFIG)\bin\libest.dll: $(DEPS_47)
	@echo ..... [Link] build\$(CONFIG)\bin\libest.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libest.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\estLib.obj" $(LIBS)  $(LOG)
!ENDIF

#
#   mprSsl.obj
#
DEPS_48 = $(DEPS_48) src\paks\mpr\mpr.h

build\$(CONFIG)\obj\mprSsl.obj: \
    src\paks\mpr\mprSsl.c $(DEPS_48)
	@echo .. [Compile] build\$(CONFIG)\obj\mprSsl.obj
	"$(CC)" -c -Fo$(BUILD)\obj\mprSsl.obj -Fd$(BUILD)\obj\mprSsl.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\include" src\paks\mpr\mprSsl.c $(LOG)

#
#   libmprssl
#
DEPS_49 = $(DEPS_49) build\$(CONFIG)\bin\libmpr.dll
!IF "$(ME_COM_EST)" == "1"
DEPS_49 = $(DEPS_49) build\$(CONFIG)\bin\libest.dll
!ENDIF
DEPS_49 = $(DEPS_49) build\$(CONFIG)\obj\mprSsl.obj

LIBS_49 = $(LIBS_49) libmpr.lib
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_49 = $(LIBS_49) libeay32.lib
LIBPATHS_49 = $(LIBPATHS_49) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_49 = $(LIBS_49) libssleay32.lib
LIBPATHS_49 = $(LIBPATHS_49) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_EST)" == "1"
LIBS_49 = $(LIBS_49) libest.lib
!ENDIF

build\$(CONFIG)\bin\libmprssl.dll: $(DEPS_49)
	@echo ..... [Link] build\$(CONFIG)\bin\libmprssl.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libmprssl.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS)  "$(BUILD)\obj\mprSsl.obj" $(LIBPATHS_49) $(LIBS_49) $(LIBS_49) $(LIBS)  $(LOG)

#
#   makerom.obj
#
DEPS_50 = $(DEPS_50) src\paks\mpr\mpr.h

build\$(CONFIG)\obj\makerom.obj: \
    src\paks\mpr\makerom.c $(DEPS_50)
	@echo .. [Compile] build\$(CONFIG)\obj\makerom.obj
	"$(CC)" -c -Fo$(BUILD)\obj\makerom.obj -Fd$(BUILD)\obj\makerom.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\paks\mpr\makerom.c $(LOG)

#
#   manager.obj
#
DEPS_51 = $(DEPS_51) src\paks\mpr\mpr.h

build\$(CONFIG)\obj\manager.obj: \
    src\paks\mpr\manager.c $(DEPS_51)
	@echo .. [Compile] build\$(CONFIG)\obj\manager.obj
	"$(CC)" -c -Fo$(BUILD)\obj\manager.obj -Fd$(BUILD)\obj\manager.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\paks\mpr\manager.c $(LOG)

#
#   manager
#
DEPS_52 = $(DEPS_52) build\$(CONFIG)\bin\libmpr.dll
DEPS_52 = $(DEPS_52) build\$(CONFIG)\obj\manager.obj

LIBS_52 = $(LIBS_52) libmpr.lib

build\$(CONFIG)\bin\espman.exe: $(DEPS_52)
	@echo ..... [Link] build\$(CONFIG)\bin\espman.exe
	"$(LD)" -nologo -out:$(BUILD)\bin\espman.exe -entry:WinMainCRTStartup -subsystem:windows $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\manager.obj" $(LIBPATHS_52) $(LIBS_52) $(LIBS_52) $(LIBS)  $(LOG)

#
#   removeFiles.obj
#
DEPS_53 = $(DEPS_53) build\$(CONFIG)\inc\me.h

build\$(CONFIG)\obj\removeFiles.obj: \
    package\windows\removeFiles.c $(DEPS_53)
	@echo .. [Compile] build\$(CONFIG)\obj\removeFiles.obj
	"$(CC)" -c -Fo$(BUILD)\obj\removeFiles.obj -Fd$(BUILD)\obj\removeFiles.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) package\windows\removeFiles.c $(LOG)

#
#   sqlite.obj
#
DEPS_54 = $(DEPS_54) build\$(CONFIG)\inc\me.h
DEPS_54 = $(DEPS_54) src\paks\sqlite\sqlite3.h

build\$(CONFIG)\obj\sqlite.obj: \
    src\paks\sqlite\sqlite.c $(DEPS_54)
	@echo .. [Compile] build\$(CONFIG)\obj\sqlite.obj
	"$(CC)" -c -Fo$(BUILD)\obj\sqlite.obj -Fd$(BUILD)\obj\sqlite.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\paks\sqlite\sqlite.c $(LOG)

