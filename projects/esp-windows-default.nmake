#
#   esp-windows-default.nmake -- Makefile to build Embedthis ESP for windows
#

NAME                  = esp
VERSION               = 5.4.0

OS                    = windows
PA                    = $(PROCESSOR_ARCHITECTURE)
!IF "$(PROFILE)" == ""
PROFILE               = default
!ENDIF


!IF "$(PA)" == "AMD64"
ARCH                  = x64
ENTRY                 = _DllMainCRTStartup
!ELSE
ARCH                  = x86
ENTRY                 = _DllMainCRTStartup@12
!ENDIF

!IF "$(CONFIG)" == ""
CONFIG                = $(OS)-$(ARCH)-$(PROFILE)
!ENDIF

!IF "$(BUILD)" == ""
BUILD                 = build\$(CONFIG)
!ENDIF

LBIN                  = $(BUILD)\bin

!IF "$(ME_COM_CGI)" == ""
ME_COM_CGI            = 0
!ENDIF
!IF "$(ME_COM_COMPILER)" == ""
ME_COM_COMPILER       = 1
!ENDIF
!IF "$(ME_COM_DIR)" == ""
ME_COM_DIR            = 0
!ENDIF
!IF "$(ME_COM_EST)" == ""
ME_COM_EST            = 1
!ENDIF
!IF "$(ME_COM_HTTP)" == ""
ME_COM_HTTP           = 1
!ENDIF
!IF "$(ME_COM_LIB)" == ""
ME_COM_LIB            = 1
!ENDIF
!IF "$(ME_COM_LINK)" == ""
ME_COM_LINK           = 1
!ENDIF
!IF "$(ME_COM_MDB)" == ""
ME_COM_MDB            = 1
!ENDIF
!IF "$(ME_COM_MPR)" == ""
ME_COM_MPR            = 1
!ENDIF
!IF "$(ME_COM_OPENSSL)" == ""
ME_COM_OPENSSL        = 0
!ENDIF
!IF "$(ME_COM_OSDEP)" == ""
ME_COM_OSDEP          = 1
!ENDIF
!IF "$(ME_COM_PCRE)" == ""
ME_COM_PCRE           = 1
!ENDIF
!IF "$(ME_COM_RC)" == ""
ME_COM_RC             = 1
!ENDIF
!IF "$(ME_COM_SQLITE)" == ""
ME_COM_SQLITE         = 1
!ENDIF
!IF "$(ME_COM_SSL)" == ""
ME_COM_SSL            = 1
!ENDIF
!IF "$(ME_COM_VXWORKS)" == ""
ME_COM_VXWORKS        = 0
!ENDIF
!IF "$(ME_COM_WINSDK)" == ""
ME_COM_WINSDK         = 1
!ENDIF

!IF "$(ME_COM_HTTP)" == ""
ME_COM_OPENSSL_PATH   = "/usr"
!ENDIF

!IF "$(ME_COM_SSL)" == ""
ME_COM_SSL            = 1
!ENDIF

!IF "$(ME_COM_COMPILER)" == ""
ME_COM_COMPILER       = 1
!ENDIF

!IF "$(ME_COM_COMPILER)" == ""
ME_COM_COMPILER       = 1
!ENDIF

!IF "$(ME_COM_SSL)" == ""
ME_COM_SSL            = 1
!ENDIF

!IF "$(ME_COM_WINSDK)" == ""
ME_COM_WINSDK         = 1
!ENDIF


CC                    = cl
LD                    = link
RC                    = rc
CFLAGS                = -nologo -GR- -W3 -Zi -Od -MDd
DFLAGS                = -D_REENTRANT -D_MT -DME_COM_CGI=$(ME_COM_CGI) -DME_COM_COMPILER=$(ME_COM_COMPILER) -DME_COM_DIR=$(ME_COM_DIR) -DME_COM_EST=$(ME_COM_EST) -DME_COM_HTTP=$(ME_COM_HTTP) -DME_COM_LIB=$(ME_COM_LIB) -DME_COM_LINK=$(ME_COM_LINK) -DME_COM_MDB=$(ME_COM_MDB) -DME_COM_MPR=$(ME_COM_MPR) -DME_COM_OPENSSL=$(ME_COM_OPENSSL) -DME_COM_OSDEP=$(ME_COM_OSDEP) -DME_COM_PCRE=$(ME_COM_PCRE) -DME_COM_RC=$(ME_COM_RC) -DME_COM_SQLITE=$(ME_COM_SQLITE) -DME_COM_SSL=$(ME_COM_SSL) -DME_COM_VXWORKS=$(ME_COM_VXWORKS) -DME_COM_WINSDK=$(ME_COM_WINSDK) 
IFLAGS                = -Ibuild\$(CONFIG)\inc
LDFLAGS               = -nologo -nodefaultlib -incremental:no -debug -machine:$(ARCH)
LIBPATHS              = "-libpath:$(BUILD)\bin"
LIBS                  = ws2_32.lib advapi32.lib user32.lib kernel32.lib oldnames.lib msvcrt.lib shell32.lib

ME_ROOT_PREFIX        = C:
ME_BASE_PREFIX        = $(ME_ROOT_PREFIX)\Program Files
ME_APP_PREFIX         = $(ME_BASE_PREFIX)\Embedthis ESP
ME_VAPP_PREFIX        = $(ME_APP_PREFIX)
ME_DATA_PREFIX        = $(ME_VAPP_PREFIX)
ME_STATE_PREFIX       = $(ME_VAPP_PREFIX)
ME_BIN_PREFIX         = $(ME_VAPP_PREFIX)\bin
ME_INC_PREFIX         = $(ME_VAPP_PREFIX)\inc
ME_LIB_PREFIX         = $(ME_VAPP_PREFIX)\lib
ME_MAN_PREFIX         = $(ME_VAPP_PREFIX)\man
ME_ETC_PREFIX         = $(ME_VAPP_PREFIX)
ME_WEB_PREFIX         = $(ME_VAPP_PREFIX)\web
ME_LOG_PREFIX         = $(ME_VAPP_PREFIX)\log
ME_SPOOL_PREFIX       = $(ME_VAPP_PREFIX)\tmp
ME_CACHE_PREFIX       = $(ME_VAPP_PREFIX)\cache
ME_SRC_PREFIX         = $(ME_VAPP_PREFIX)\src


TARGETS               = $(TARGETS) build\$(CONFIG)\bin\esp-compile.json
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\esp.exe
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\ca.crt
!IF "$(ME_COM_HTTP)" == "1"
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\http.exe
!ENDIF
!IF "$(ME_COM_EST)" == "1"
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\libest.dll
!ENDIF
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\libmprssl.dll
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\espman.exe

!IFNDEF SHOW
.SILENT:
!ENDIF

all build compile: prep $(TARGETS)

.PHONY: prep

prep:
!IF "$(VSINSTALLDIR)" == ""
	echo "Visual Studio vars not set. Run vcvars.bat."
	exit 255
!ENDIF
!IF "$(ME_APP_PREFIX)" == ""
	echo "ME_APP_PREFIX not set."
	exit 255
!ENDIF
	@if not exist $(BUILD)\bin md $(BUILD)\bin
	@if not exist $(BUILD)\inc md $(BUILD)\inc
	@if not exist $(BUILD)\obj md $(BUILD)\obj
	@if not exist $(BUILD)\inc\me.h copy projects\esp-windows-default-me.h $(BUILD)\inc\me.h

!IF "$(SHOW)" != ""
	@echo ..... [Info] Use "make SHOW=1" to trace executed commands and errors.
LOG =
!ELSE
LOG = >nul
!ENDIF

clean:
	if exist "build\$(CONFIG)\obj\edi.obj" del /Q "build\$(CONFIG)\obj\edi.obj"
	if exist "build\$(CONFIG)\obj\esp.obj" del /Q "build\$(CONFIG)\obj\esp.obj"
	if exist "build\$(CONFIG)\obj\espAbbrev.obj" del /Q "build\$(CONFIG)\obj\espAbbrev.obj"
	if exist "build\$(CONFIG)\obj\espConfig.obj" del /Q "build\$(CONFIG)\obj\espConfig.obj"
	if exist "build\$(CONFIG)\obj\espFramework.obj" del /Q "build\$(CONFIG)\obj\espFramework.obj"
	if exist "build\$(CONFIG)\obj\espHtml.obj" del /Q "build\$(CONFIG)\obj\espHtml.obj"
	if exist "build\$(CONFIG)\obj\espRequest.obj" del /Q "build\$(CONFIG)\obj\espRequest.obj"
	if exist "build\$(CONFIG)\obj\espTemplate.obj" del /Q "build\$(CONFIG)\obj\espTemplate.obj"
	if exist "build\$(CONFIG)\obj\estLib.obj" del /Q "build\$(CONFIG)\obj\estLib.obj"
	if exist "build\$(CONFIG)\obj\http.obj" del /Q "build\$(CONFIG)\obj\http.obj"
	if exist "build\$(CONFIG)\obj\httpLib.obj" del /Q "build\$(CONFIG)\obj\httpLib.obj"
	if exist "build\$(CONFIG)\obj\makerom.obj" del /Q "build\$(CONFIG)\obj\makerom.obj"
	if exist "build\$(CONFIG)\obj\manager.obj" del /Q "build\$(CONFIG)\obj\manager.obj"
	if exist "build\$(CONFIG)\obj\mdb.obj" del /Q "build\$(CONFIG)\obj\mdb.obj"
	if exist "build\$(CONFIG)\obj\mprLib.obj" del /Q "build\$(CONFIG)\obj\mprLib.obj"
	if exist "build\$(CONFIG)\obj\mprSsl.obj" del /Q "build\$(CONFIG)\obj\mprSsl.obj"
	if exist "build\$(CONFIG)\obj\pcre.obj" del /Q "build\$(CONFIG)\obj\pcre.obj"
	if exist "build\$(CONFIG)\obj\sdb.obj" del /Q "build\$(CONFIG)\obj\sdb.obj"
	if exist "build\$(CONFIG)\obj\sqlite.obj" del /Q "build\$(CONFIG)\obj\sqlite.obj"
	if exist "build\$(CONFIG)\obj\sqlite3.obj" del /Q "build\$(CONFIG)\obj\sqlite3.obj"
	if exist "build\$(CONFIG)\bin\esp-compile.json" del /Q "build\$(CONFIG)\bin\esp-compile.json"
	if exist "build\$(CONFIG)\bin\esp.exe" del /Q "build\$(CONFIG)\bin\esp.exe"
	if exist "build\$(CONFIG)\bin\esp.lib" del /Q "build\$(CONFIG)\bin\esp.lib"
	if exist "build\$(CONFIG)\bin\esp.pdb" del /Q "build\$(CONFIG)\bin\esp.pdb"
	if exist "build\$(CONFIG)\bin\esp.exp" del /Q "build\$(CONFIG)\bin\esp.exp"
	if exist "build\$(CONFIG)\bin\ca.crt" del /Q "build\$(CONFIG)\bin\ca.crt"
	if exist "build\$(CONFIG)\bin\http.exe" del /Q "build\$(CONFIG)\bin\http.exe"
	if exist "build\$(CONFIG)\bin\http.lib" del /Q "build\$(CONFIG)\bin\http.lib"
	if exist "build\$(CONFIG)\bin\http.pdb" del /Q "build\$(CONFIG)\bin\http.pdb"
	if exist "build\$(CONFIG)\bin\http.exp" del /Q "build\$(CONFIG)\bin\http.exp"
	if exist "build\$(CONFIG)\bin\libesp.dll" del /Q "build\$(CONFIG)\bin\libesp.dll"
	if exist "build\$(CONFIG)\bin\libesp.lib" del /Q "build\$(CONFIG)\bin\libesp.lib"
	if exist "build\$(CONFIG)\bin\libesp.pdb" del /Q "build\$(CONFIG)\bin\libesp.pdb"
	if exist "build\$(CONFIG)\bin\libesp.exp" del /Q "build\$(CONFIG)\bin\libesp.exp"
	if exist "build\$(CONFIG)\bin\libest.dll" del /Q "build\$(CONFIG)\bin\libest.dll"
	if exist "build\$(CONFIG)\bin\libest.lib" del /Q "build\$(CONFIG)\bin\libest.lib"
	if exist "build\$(CONFIG)\bin\libest.pdb" del /Q "build\$(CONFIG)\bin\libest.pdb"
	if exist "build\$(CONFIG)\bin\libest.exp" del /Q "build\$(CONFIG)\bin\libest.exp"
	if exist "build\$(CONFIG)\bin\libhttp.dll" del /Q "build\$(CONFIG)\bin\libhttp.dll"
	if exist "build\$(CONFIG)\bin\libhttp.lib" del /Q "build\$(CONFIG)\bin\libhttp.lib"
	if exist "build\$(CONFIG)\bin\libhttp.pdb" del /Q "build\$(CONFIG)\bin\libhttp.pdb"
	if exist "build\$(CONFIG)\bin\libhttp.exp" del /Q "build\$(CONFIG)\bin\libhttp.exp"
	if exist "build\$(CONFIG)\bin\libmpr.dll" del /Q "build\$(CONFIG)\bin\libmpr.dll"
	if exist "build\$(CONFIG)\bin\libmpr.lib" del /Q "build\$(CONFIG)\bin\libmpr.lib"
	if exist "build\$(CONFIG)\bin\libmpr.pdb" del /Q "build\$(CONFIG)\bin\libmpr.pdb"
	if exist "build\$(CONFIG)\bin\libmpr.exp" del /Q "build\$(CONFIG)\bin\libmpr.exp"
	if exist "build\$(CONFIG)\bin\libmprssl.dll" del /Q "build\$(CONFIG)\bin\libmprssl.dll"
	if exist "build\$(CONFIG)\bin\libmprssl.lib" del /Q "build\$(CONFIG)\bin\libmprssl.lib"
	if exist "build\$(CONFIG)\bin\libmprssl.pdb" del /Q "build\$(CONFIG)\bin\libmprssl.pdb"
	if exist "build\$(CONFIG)\bin\libmprssl.exp" del /Q "build\$(CONFIG)\bin\libmprssl.exp"
	if exist "build\$(CONFIG)\bin\libpcre.dll" del /Q "build\$(CONFIG)\bin\libpcre.dll"
	if exist "build\$(CONFIG)\bin\libpcre.lib" del /Q "build\$(CONFIG)\bin\libpcre.lib"
	if exist "build\$(CONFIG)\bin\libpcre.pdb" del /Q "build\$(CONFIG)\bin\libpcre.pdb"
	if exist "build\$(CONFIG)\bin\libpcre.exp" del /Q "build\$(CONFIG)\bin\libpcre.exp"
	if exist "build\$(CONFIG)\bin\libsql.dll" del /Q "build\$(CONFIG)\bin\libsql.dll"
	if exist "build\$(CONFIG)\bin\libsql.lib" del /Q "build\$(CONFIG)\bin\libsql.lib"
	if exist "build\$(CONFIG)\bin\libsql.pdb" del /Q "build\$(CONFIG)\bin\libsql.pdb"
	if exist "build\$(CONFIG)\bin\libsql.exp" del /Q "build\$(CONFIG)\bin\libsql.exp"
	if exist "build\$(CONFIG)\bin\espman.exe" del /Q "build\$(CONFIG)\bin\espman.exe"
	if exist "build\$(CONFIG)\bin\espman.lib" del /Q "build\$(CONFIG)\bin\espman.lib"
	if exist "build\$(CONFIG)\bin\espman.pdb" del /Q "build\$(CONFIG)\bin\espman.pdb"
	if exist "build\$(CONFIG)\bin\espman.exp" del /Q "build\$(CONFIG)\bin\espman.exp"

#
#   esp-compile.json
#
DEPS_40 = $(DEPS_40) src\esp-compile.json

build\$(CONFIG)\bin\esp-compile.json: $(DEPS_40)
	@echo ..... [Copy] build\$(CONFIG)\bin\esp-compile.json
	if not exist "build\$(CONFIG)\bin" md "build\$(CONFIG)\bin"
	copy /Y /B src\esp-compile.json+modified build\$(CONFIG)\bin\esp-compile.json $(LOG)

#
#   edi.h
#
DEPS_41 = $(DEPS_41) src\edi.h

build\$(CONFIG)\inc\edi.h: $(DEPS_41)
	@echo ..... [Copy] build\$(CONFIG)\inc\edi.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\edi.h+modified build\$(CONFIG)\inc\edi.h $(LOG)

#
#   esp.h
#
DEPS_42 = $(DEPS_42) src\esp.h

build\$(CONFIG)\inc\esp.h: $(DEPS_42)
	@echo ..... [Copy] build\$(CONFIG)\inc\esp.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\esp.h+modified build\$(CONFIG)\inc\esp.h $(LOG)

#
#   mdb.h
#
DEPS_43 = $(DEPS_43) src\mdb.h

build\$(CONFIG)\inc\mdb.h: $(DEPS_43)
	@echo ..... [Copy] build\$(CONFIG)\inc\mdb.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\mdb.h+modified build\$(CONFIG)\inc\mdb.h $(LOG)

#
#   sqlite3.h
#
DEPS_44 = $(DEPS_44) src\sqlite\sqlite3.h

build\$(CONFIG)\inc\sqlite3.h: $(DEPS_44)
	@echo ..... [Copy] build\$(CONFIG)\inc\sqlite3.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\sqlite\sqlite3.h+modified build\$(CONFIG)\inc\sqlite3.h $(LOG)

#
#   me.h
#

build\$(CONFIG)\inc\me.h: $(DEPS_45)

#
#   sqlite3.h
#

src\sqlite\sqlite3.h: $(DEPS_46)

#
#   sqlite3.obj
#
DEPS_47 = $(DEPS_47) build\$(CONFIG)\inc\me.h
DEPS_47 = $(DEPS_47) src\sqlite\sqlite3.h

build\$(CONFIG)\obj\sqlite3.obj: \
    src\sqlite\sqlite3.c $(DEPS_47)
	@echo .. [Compile] build\$(CONFIG)\obj\sqlite3.obj
	"$(CC)" -c -Fo$(BUILD)\obj\sqlite3.obj -Fd$(BUILD)\obj\sqlite3.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\sqlite\sqlite3.c $(LOG)

!IF "$(ME_COM_SQLITE)" == "1"
#
#   libsql
#
DEPS_48 = $(DEPS_48) build\$(CONFIG)\inc\sqlite3.h
DEPS_48 = $(DEPS_48) build\$(CONFIG)\obj\sqlite3.obj

build\$(CONFIG)\bin\libsql.dll: $(DEPS_48)
	@echo ..... [Link] build\$(CONFIG)\bin\libsql.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libsql.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\sqlite3.obj" $(LIBS)  $(LOG)
!ENDIF

#
#   osdep.h
#
DEPS_49 = $(DEPS_49) src\osdep\osdep.h
DEPS_49 = $(DEPS_49) build\$(CONFIG)\inc\me.h

build\$(CONFIG)\inc\osdep.h: $(DEPS_49)
	@echo ..... [Copy] build\$(CONFIG)\inc\osdep.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\osdep\osdep.h+modified build\$(CONFIG)\inc\osdep.h $(LOG)

#
#   mpr.h
#
DEPS_50 = $(DEPS_50) src\mpr\mpr.h
DEPS_50 = $(DEPS_50) build\$(CONFIG)\inc\me.h
DEPS_50 = $(DEPS_50) build\$(CONFIG)\inc\osdep.h

build\$(CONFIG)\inc\mpr.h: $(DEPS_50)
	@echo ..... [Copy] build\$(CONFIG)\inc\mpr.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\mpr\mpr.h+modified build\$(CONFIG)\inc\mpr.h $(LOG)

#
#   mpr.h
#

src\mpr\mpr.h: $(DEPS_51)

#
#   mprLib.obj
#
DEPS_52 = $(DEPS_52) src\mpr\mpr.h

build\$(CONFIG)\obj\mprLib.obj: \
    src\mpr\mprLib.c $(DEPS_52)
	@echo .. [Compile] build\$(CONFIG)\obj\mprLib.obj
	"$(CC)" -c -Fo$(BUILD)\obj\mprLib.obj -Fd$(BUILD)\obj\mprLib.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\mpr\mprLib.c $(LOG)

#
#   libmpr
#
DEPS_53 = $(DEPS_53) build\$(CONFIG)\inc\osdep.h
DEPS_53 = $(DEPS_53) build\$(CONFIG)\inc\mpr.h
DEPS_53 = $(DEPS_53) build\$(CONFIG)\obj\mprLib.obj

build\$(CONFIG)\bin\libmpr.dll: $(DEPS_53)
	@echo ..... [Link] build\$(CONFIG)\bin\libmpr.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libmpr.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\mprLib.obj" $(LIBS)  $(LOG)

#
#   pcre.h
#
DEPS_54 = $(DEPS_54) src\pcre\pcre.h

build\$(CONFIG)\inc\pcre.h: $(DEPS_54)
	@echo ..... [Copy] build\$(CONFIG)\inc\pcre.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\pcre\pcre.h+modified build\$(CONFIG)\inc\pcre.h $(LOG)

#
#   pcre.h
#

src\pcre\pcre.h: $(DEPS_55)

#
#   pcre.obj
#
DEPS_56 = $(DEPS_56) build\$(CONFIG)\inc\me.h
DEPS_56 = $(DEPS_56) src\pcre\pcre.h

build\$(CONFIG)\obj\pcre.obj: \
    src\pcre\pcre.c $(DEPS_56)
	@echo .. [Compile] build\$(CONFIG)\obj\pcre.obj
	"$(CC)" -c -Fo$(BUILD)\obj\pcre.obj -Fd$(BUILD)\obj\pcre.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\pcre\pcre.c $(LOG)

!IF "$(ME_COM_PCRE)" == "1"
#
#   libpcre
#
DEPS_57 = $(DEPS_57) build\$(CONFIG)\inc\pcre.h
DEPS_57 = $(DEPS_57) build\$(CONFIG)\obj\pcre.obj

build\$(CONFIG)\bin\libpcre.dll: $(DEPS_57)
	@echo ..... [Link] build\$(CONFIG)\bin\libpcre.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libpcre.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\pcre.obj" $(LIBS)  $(LOG)
!ENDIF

#
#   http.h
#
DEPS_58 = $(DEPS_58) src\http\http.h
DEPS_58 = $(DEPS_58) build\$(CONFIG)\inc\mpr.h

build\$(CONFIG)\inc\http.h: $(DEPS_58)
	@echo ..... [Copy] build\$(CONFIG)\inc\http.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\http\http.h+modified build\$(CONFIG)\inc\http.h $(LOG)

#
#   http.h
#

src\http\http.h: $(DEPS_59)

#
#   httpLib.obj
#
DEPS_60 = $(DEPS_60) src\http\http.h

build\$(CONFIG)\obj\httpLib.obj: \
    src\http\httpLib.c $(DEPS_60)
	@echo .. [Compile] build\$(CONFIG)\obj\httpLib.obj
	"$(CC)" -c -Fo$(BUILD)\obj\httpLib.obj -Fd$(BUILD)\obj\httpLib.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\http\httpLib.c $(LOG)

!IF "$(ME_COM_HTTP)" == "1"
#
#   libhttp
#
DEPS_61 = $(DEPS_61) build\$(CONFIG)\bin\libmpr.dll
!IF "$(ME_COM_PCRE)" == "1"
DEPS_61 = $(DEPS_61) build\$(CONFIG)\bin\libpcre.dll
!ENDIF
DEPS_61 = $(DEPS_61) build\$(CONFIG)\inc\http.h
DEPS_61 = $(DEPS_61) build\$(CONFIG)\obj\httpLib.obj

LIBS_61 = $(LIBS_61) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_61 = $(LIBS_61) libpcre.lib
!ENDIF

build\$(CONFIG)\bin\libhttp.dll: $(DEPS_61)
	@echo ..... [Link] build\$(CONFIG)\bin\libhttp.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libhttp.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\httpLib.obj" $(LIBPATHS_61) $(LIBS_61) $(LIBS_61) $(LIBS)  $(LOG)
!ENDIF

#
#   edi.h
#

src\edi.h: $(DEPS_62)

#
#   edi.obj
#
DEPS_63 = $(DEPS_63) src\edi.h
DEPS_63 = $(DEPS_63) build\$(CONFIG)\inc\pcre.h

build\$(CONFIG)\obj\edi.obj: \
    src\edi.c $(DEPS_63)
	@echo .. [Compile] build\$(CONFIG)\obj\edi.obj
	"$(CC)" -c -Fo$(BUILD)\obj\edi.obj -Fd$(BUILD)\obj\edi.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\edi.c $(LOG)

#
#   esp.h
#

src\esp.h: $(DEPS_64)

#
#   espAbbrev.obj
#
DEPS_65 = $(DEPS_65) src\esp.h

build\$(CONFIG)\obj\espAbbrev.obj: \
    src\espAbbrev.c $(DEPS_65)
	@echo .. [Compile] build\$(CONFIG)\obj\espAbbrev.obj
	"$(CC)" -c -Fo$(BUILD)\obj\espAbbrev.obj -Fd$(BUILD)\obj\espAbbrev.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\espAbbrev.c $(LOG)

#
#   espConfig.obj
#
DEPS_66 = $(DEPS_66) src\esp.h

build\$(CONFIG)\obj\espConfig.obj: \
    src\espConfig.c $(DEPS_66)
	@echo .. [Compile] build\$(CONFIG)\obj\espConfig.obj
	"$(CC)" -c -Fo$(BUILD)\obj\espConfig.obj -Fd$(BUILD)\obj\espConfig.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\espConfig.c $(LOG)

#
#   espFramework.obj
#
DEPS_67 = $(DEPS_67) src\esp.h

build\$(CONFIG)\obj\espFramework.obj: \
    src\espFramework.c $(DEPS_67)
	@echo .. [Compile] build\$(CONFIG)\obj\espFramework.obj
	"$(CC)" -c -Fo$(BUILD)\obj\espFramework.obj -Fd$(BUILD)\obj\espFramework.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\espFramework.c $(LOG)

#
#   espHtml.obj
#
DEPS_68 = $(DEPS_68) src\esp.h
DEPS_68 = $(DEPS_68) src\edi.h

build\$(CONFIG)\obj\espHtml.obj: \
    src\espHtml.c $(DEPS_68)
	@echo .. [Compile] build\$(CONFIG)\obj\espHtml.obj
	"$(CC)" -c -Fo$(BUILD)\obj\espHtml.obj -Fd$(BUILD)\obj\espHtml.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\espHtml.c $(LOG)

#
#   espRequest.obj
#
DEPS_69 = $(DEPS_69) src\esp.h

build\$(CONFIG)\obj\espRequest.obj: \
    src\espRequest.c $(DEPS_69)
	@echo .. [Compile] build\$(CONFIG)\obj\espRequest.obj
	"$(CC)" -c -Fo$(BUILD)\obj\espRequest.obj -Fd$(BUILD)\obj\espRequest.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\espRequest.c $(LOG)

#
#   espTemplate.obj
#
DEPS_70 = $(DEPS_70) src\esp.h

build\$(CONFIG)\obj\espTemplate.obj: \
    src\espTemplate.c $(DEPS_70)
	@echo .. [Compile] build\$(CONFIG)\obj\espTemplate.obj
	"$(CC)" -c -Fo$(BUILD)\obj\espTemplate.obj -Fd$(BUILD)\obj\espTemplate.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\espTemplate.c $(LOG)

#
#   mdb.h
#

src\mdb.h: $(DEPS_71)

#
#   mdb.obj
#
DEPS_72 = $(DEPS_72) build\$(CONFIG)\inc\http.h
DEPS_72 = $(DEPS_72) src\edi.h
DEPS_72 = $(DEPS_72) src\mdb.h
DEPS_72 = $(DEPS_72) build\$(CONFIG)\inc\pcre.h

build\$(CONFIG)\obj\mdb.obj: \
    src\mdb.c $(DEPS_72)
	@echo .. [Compile] build\$(CONFIG)\obj\mdb.obj
	"$(CC)" -c -Fo$(BUILD)\obj\mdb.obj -Fd$(BUILD)\obj\mdb.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\mdb.c $(LOG)

#
#   sdb.obj
#
DEPS_73 = $(DEPS_73) build\$(CONFIG)\inc\http.h
DEPS_73 = $(DEPS_73) src\edi.h

build\$(CONFIG)\obj\sdb.obj: \
    src\sdb.c $(DEPS_73)
	@echo .. [Compile] build\$(CONFIG)\obj\sdb.obj
	"$(CC)" -c -Fo$(BUILD)\obj\sdb.obj -Fd$(BUILD)\obj\sdb.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\sdb.c $(LOG)

#
#   libesp
#
!IF "$(ME_COM_SQLITE)" == "1"
DEPS_74 = $(DEPS_74) build\$(CONFIG)\bin\libsql.dll
!ENDIF
!IF "$(ME_COM_HTTP)" == "1"
DEPS_74 = $(DEPS_74) build\$(CONFIG)\bin\libhttp.dll
!ENDIF
DEPS_74 = $(DEPS_74) build\$(CONFIG)\inc\edi.h
DEPS_74 = $(DEPS_74) build\$(CONFIG)\inc\esp.h
DEPS_74 = $(DEPS_74) build\$(CONFIG)\inc\mdb.h
DEPS_74 = $(DEPS_74) build\$(CONFIG)\obj\edi.obj
DEPS_74 = $(DEPS_74) build\$(CONFIG)\obj\espAbbrev.obj
DEPS_74 = $(DEPS_74) build\$(CONFIG)\obj\espConfig.obj
DEPS_74 = $(DEPS_74) build\$(CONFIG)\obj\espFramework.obj
DEPS_74 = $(DEPS_74) build\$(CONFIG)\obj\espHtml.obj
DEPS_74 = $(DEPS_74) build\$(CONFIG)\obj\espRequest.obj
DEPS_74 = $(DEPS_74) build\$(CONFIG)\obj\espTemplate.obj
DEPS_74 = $(DEPS_74) build\$(CONFIG)\obj\mdb.obj
DEPS_74 = $(DEPS_74) build\$(CONFIG)\obj\sdb.obj

!IF "$(ME_COM_SQLITE)" == "1"
LIBS_74 = $(LIBS_74) libsql.lib
!ENDIF
!IF "$(ME_COM_HTTP)" == "1"
LIBS_74 = $(LIBS_74) libhttp.lib
!ENDIF
LIBS_74 = $(LIBS_74) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_74 = $(LIBS_74) libpcre.lib
!ENDIF

build\$(CONFIG)\bin\libesp.dll: $(DEPS_74)
	@echo ..... [Link] build\$(CONFIG)\bin\libesp.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libesp.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\edi.obj" "$(BUILD)\obj\espAbbrev.obj" "$(BUILD)\obj\espConfig.obj" "$(BUILD)\obj\espFramework.obj" "$(BUILD)\obj\espHtml.obj" "$(BUILD)\obj\espRequest.obj" "$(BUILD)\obj\espTemplate.obj" "$(BUILD)\obj\mdb.obj" "$(BUILD)\obj\sdb.obj" $(LIBPATHS_74) $(LIBS_74) $(LIBS_74) $(LIBS)  $(LOG)

#
#   esp.obj
#
DEPS_75 = $(DEPS_75) src\esp.h

build\$(CONFIG)\obj\esp.obj: \
    src\esp.c $(DEPS_75)
	@echo .. [Compile] build\$(CONFIG)\obj\esp.obj
	"$(CC)" -c -Fo$(BUILD)\obj\esp.obj -Fd$(BUILD)\obj\esp.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\esp.c $(LOG)

#
#   espcmd
#
!IF "$(ME_COM_SQLITE)" == "1"
DEPS_76 = $(DEPS_76) build\$(CONFIG)\bin\libsql.dll
!ENDIF
DEPS_76 = $(DEPS_76) build\$(CONFIG)\bin\libesp.dll
DEPS_76 = $(DEPS_76) build\$(CONFIG)\obj\esp.obj

!IF "$(ME_COM_SQLITE)" == "1"
LIBS_76 = $(LIBS_76) libsql.lib
!ENDIF
LIBS_76 = $(LIBS_76) libesp.lib
!IF "$(ME_COM_HTTP)" == "1"
LIBS_76 = $(LIBS_76) libhttp.lib
!ENDIF
LIBS_76 = $(LIBS_76) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_76 = $(LIBS_76) libpcre.lib
!ENDIF

build\$(CONFIG)\bin\esp.exe: $(DEPS_76)
	@echo ..... [Link] build\$(CONFIG)\bin\esp.exe
	"$(LD)" -nologo -out:$(BUILD)\bin\esp.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\esp.obj" $(LIBPATHS_76) $(LIBS_76) $(LIBS_76) $(LIBS)  $(LOG)

#
#   http-ca-crt
#
DEPS_77 = $(DEPS_77) src\http\ca.crt

build\$(CONFIG)\bin\ca.crt: $(DEPS_77)
	@echo ..... [Copy] build\$(CONFIG)\bin\ca.crt
	if not exist "build\$(CONFIG)\bin" md "build\$(CONFIG)\bin"
	copy /Y /B src\http\ca.crt+modified build\$(CONFIG)\bin\ca.crt $(LOG)

#
#   http.obj
#
DEPS_78 = $(DEPS_78) src\http\http.h

build\$(CONFIG)\obj\http.obj: \
    src\http\http.c $(DEPS_78)
	@echo .. [Compile] build\$(CONFIG)\obj\http.obj
	"$(CC)" -c -Fo$(BUILD)\obj\http.obj -Fd$(BUILD)\obj\http.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\http\http.c $(LOG)

!IF "$(ME_COM_HTTP)" == "1"
#
#   httpcmd
#
DEPS_79 = $(DEPS_79) build\$(CONFIG)\bin\libhttp.dll
DEPS_79 = $(DEPS_79) build\$(CONFIG)\obj\http.obj

LIBS_79 = $(LIBS_79) libhttp.lib
LIBS_79 = $(LIBS_79) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_79 = $(LIBS_79) libpcre.lib
!ENDIF

build\$(CONFIG)\bin\http.exe: $(DEPS_79)
	@echo ..... [Link] build\$(CONFIG)\bin\http.exe
	"$(LD)" -nologo -out:$(BUILD)\bin\http.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\http.obj" $(LIBPATHS_79) $(LIBS_79) $(LIBS_79) $(LIBS)  $(LOG)
!ENDIF

#
#   est.h
#
DEPS_80 = $(DEPS_80) src\est\est.h

build\$(CONFIG)\inc\est.h: $(DEPS_80)
	@echo ..... [Copy] build\$(CONFIG)\inc\est.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\est\est.h+modified build\$(CONFIG)\inc\est.h $(LOG)

#
#   est.h
#

src\est\est.h: $(DEPS_81)

#
#   estLib.obj
#
DEPS_82 = $(DEPS_82) src\est\est.h

build\$(CONFIG)\obj\estLib.obj: \
    src\est\estLib.c $(DEPS_82)
	@echo .. [Compile] build\$(CONFIG)\obj\estLib.obj
	"$(CC)" -c -Fo$(BUILD)\obj\estLib.obj -Fd$(BUILD)\obj\estLib.pdb -nologo -GR- -Zi -Od -MDd $(DFLAGS) $(IFLAGS) src\est\estLib.c $(LOG)

!IF "$(ME_COM_EST)" == "1"
#
#   libest
#
DEPS_83 = $(DEPS_83) build\$(CONFIG)\inc\osdep.h
DEPS_83 = $(DEPS_83) build\$(CONFIG)\inc\est.h
DEPS_83 = $(DEPS_83) build\$(CONFIG)\obj\estLib.obj

build\$(CONFIG)\bin\libest.dll: $(DEPS_83)
	@echo ..... [Link] build\$(CONFIG)\bin\libest.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libest.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\estLib.obj" $(LIBS)  $(LOG)
!ENDIF

#
#   mprSsl.obj
#
DEPS_84 = $(DEPS_84) src\mpr\mpr.h

build\$(CONFIG)\obj\mprSsl.obj: \
    src\mpr\mprSsl.c $(DEPS_84)
	@echo .. [Compile] build\$(CONFIG)\obj\mprSsl.obj
	"$(CC)" -c -Fo$(BUILD)\obj\mprSsl.obj -Fd$(BUILD)\obj\mprSsl.pdb $(CFLAGS) $(DFLAGS) -DME_COM_OPENSSL_PATH="$(ME_COM_OPENSSL_PATH)" $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\include" src\mpr\mprSsl.c $(LOG)

#
#   libmprssl
#
DEPS_85 = $(DEPS_85) build\$(CONFIG)\bin\libmpr.dll
!IF "$(ME_COM_EST)" == "1"
DEPS_85 = $(DEPS_85) build\$(CONFIG)\bin\libest.dll
!ENDIF
DEPS_85 = $(DEPS_85) build\$(CONFIG)\obj\mprSsl.obj

LIBS_85 = $(LIBS_85) libmpr.lib
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_85 = $(LIBS_85) libeay32.lib
LIBPATHS_85 = $(LIBPATHS_85) -libpath:$(ME_COM_OPENSSL_PATH)/lib
LIBPATHS_85 = $(LIBPATHS_85) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_85 = $(LIBS_85) libssleay32.lib
LIBPATHS_85 = $(LIBPATHS_85) -libpath:$(ME_COM_OPENSSL_PATH)/lib
LIBPATHS_85 = $(LIBPATHS_85) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_EST)" == "1"
LIBS_85 = $(LIBS_85) libest.lib
!ENDIF

build\$(CONFIG)\bin\libmprssl.dll: $(DEPS_85)
	@echo ..... [Link] build\$(CONFIG)\bin\libmprssl.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libmprssl.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS)   "$(BUILD)\obj\mprSsl.obj" $(LIBPATHS_85) $(LIBS_85) $(LIBS_85) $(LIBS)  $(LOG)

#
#   makerom.obj
#
DEPS_86 = $(DEPS_86) src\mpr\mpr.h

build\$(CONFIG)\obj\makerom.obj: \
    src\mpr\makerom.c $(DEPS_86)
	@echo .. [Compile] build\$(CONFIG)\obj\makerom.obj
	"$(CC)" -c -Fo$(BUILD)\obj\makerom.obj -Fd$(BUILD)\obj\makerom.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\mpr\makerom.c $(LOG)

#
#   manager.obj
#
DEPS_87 = $(DEPS_87) src\mpr\mpr.h

build\$(CONFIG)\obj\manager.obj: \
    src\mpr\manager.c $(DEPS_87)
	@echo .. [Compile] build\$(CONFIG)\obj\manager.obj
	"$(CC)" -c -Fo$(BUILD)\obj\manager.obj -Fd$(BUILD)\obj\manager.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\mpr\manager.c $(LOG)

#
#   manager
#
DEPS_88 = $(DEPS_88) build\$(CONFIG)\bin\libmpr.dll
DEPS_88 = $(DEPS_88) build\$(CONFIG)\obj\manager.obj

LIBS_88 = $(LIBS_88) libmpr.lib

build\$(CONFIG)\bin\espman.exe: $(DEPS_88)
	@echo ..... [Link] build\$(CONFIG)\bin\espman.exe
	"$(LD)" -nologo -out:$(BUILD)\bin\espman.exe -entry:WinMainCRTStartup -subsystem:windows $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\manager.obj" $(LIBPATHS_88) $(LIBS_88) $(LIBS_88) $(LIBS)  $(LOG)

#
#   sqlite.obj
#
DEPS_89 = $(DEPS_89) build\$(CONFIG)\inc\me.h
DEPS_89 = $(DEPS_89) src\sqlite\sqlite3.h

build\$(CONFIG)\obj\sqlite.obj: \
    src\sqlite\sqlite.c $(DEPS_89)
	@echo .. [Compile] build\$(CONFIG)\obj\sqlite.obj
	"$(CC)" -c -Fo$(BUILD)\obj\sqlite.obj -Fd$(BUILD)\obj\sqlite.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\sqlite\sqlite.c $(LOG)

